/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EstoqueView.java
 *
 * Created on 29/11/2011, 15:36:48
 */
package br.com.infortec.view;

import br.com.infortec.DAO.EstoqueDAO;
import br.com.infortec.DAO.ProdutoDAO;
import br.com.infortec.DAO.UnidadeDAO;
import br.com.infortec.bean.Estoque;
import br.com.infortec.bean.Produto;
import br.com.infortec.bean.Unidade;
import br.com.infortec.util.Utilitarios;
import java.awt.Dimension;
import java.awt.EventQueue;

import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Date;
import java.text.ParseException;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.TableModel;

/**
 *
 * @author Infortec
 */
public class EstoqueView extends JPanel {

    public EstoqueView() {
        initComponents();
//getRootPane().setDefaultButton(btSalvar);  
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    int add = 0;
    int cont2 = 0;

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        rowSorterToStringConverter1 = new br.com.infortec.converter.RowSorterToStringConverter();
        jPanel3 = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable(){

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        jPanel2 = new javax.swing.JPanel();
        dataEstoqueLabel = new javax.swing.JLabel();
        tipoEstoqueLabel = new javax.swing.JLabel();
        txtQtdeEstoque = new javax.swing.JTextField();
        qtdeEstoqueLabel = new javax.swing.JLabel();
        produtoCodProdutoLabel = new javax.swing.JLabel();
        comboBoxUnidade = new javax.swing.JComboBox();
        txtQtdeUnidade = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btBuscarproduto = new javax.swing.JButton();
        txtProduto = new javax.swing.JTextField();
        txtData = new javax.swing.JFormattedTextField();
        bordaOk = new javax.swing.JTextField();
        bordaErro = new javax.swing.JTextField();
        painelProdutos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProduto = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        LabelCod = new javax.swing.JLabel();
        labelNome = new javax.swing.JLabel();
        labelDescricao = new javax.swing.JLabel();
        labelPreco = new javax.swing.JLabel();
        labelEstoque = new javax.swing.JLabel();
        labelLocalizacao = new javax.swing.JLabel();
        btImportar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        brExcluir = new javax.swing.JButton();
        btInserir = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        table.setBackground(new java.awt.Color(255, 255, 204));
        table.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        table.setModel(tabelaModel(listaEditaEstoque));
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterScrollPane.setViewportView(table);

        dataEstoqueLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        dataEstoqueLabel.setText("Data Estoque:");

        tipoEstoqueLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        tipoEstoqueLabel.setText("Tipo de Unidade:");

        txtQtdeEstoque.setEditable(false);
        txtQtdeEstoque.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtQtdeEstoque.setToolTipText("Informe o total de ítens");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, table, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), txtQtdeEstoque, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        qtdeEstoqueLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        qtdeEstoqueLabel.setText("Total de Ítens:");

        produtoCodProdutoLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        produtoCodProdutoLabel.setText("Produto:");

        comboBoxUnidade.addItem("");
        comboBoxUnidade.setEnabled(false);
        for (Unidade listaUnidade : listaComboBoxUnidade) {
            add++;
            comboBoxUnidade.addItem(listaUnidade.getCod() +" | "+ listaUnidade.getDescricao()+" Com "+listaUnidade.getQtde());

        }
        comboBoxUnidade.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        comboBoxUnidade.setToolTipText("Selecione o tipo de unidade");
        comboBoxUnidade.addItemListener(formListener);
        comboBoxUnidade.addFocusListener(formListener);

        txtQtdeUnidade.setEnabled(false);
        txtQtdeUnidade.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtQtdeUnidade.setToolTipText("Informe a quantidade de unidades");
        txtQtdeUnidade.addFocusListener(formListener);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Quantidade de Unidades:");

        btBuscarproduto.setEnabled(false);
        btBuscarproduto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btBuscarproduto.setText("Buscar Produto");
        btBuscarproduto.setToolTipText("Buscar produto");
        btBuscarproduto.addActionListener(formListener);

        txtProduto.setEditable(false);
        txtProduto.setBackground(new java.awt.Color(255, 255, 204));
        txtProduto.setEditable(false);
        txtProduto.setFont(new java.awt.Font("Tahoma", 1, 12));
        txtProduto.setToolTipText("Informe o nome do produto");

        txtData.setEnabled(false);
        txtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtData.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtData.addKeyListener(formListener);

        bordaOk.setVisible(false);

        bordaErro.setVisible(false);
        bordaErro.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 102, 102)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(produtoCodProdutoLabel)
                            .addComponent(dataEstoqueLabel)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboBoxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tipoEstoqueLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(txtQtdeUnidade, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(qtdeEstoqueLabel)
                                    .addComponent(txtQtdeEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(txtProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btBuscarproduto)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                        .addComponent(bordaOk, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bordaErro, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(produtoCodProdutoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarproduto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoEstoqueLabel)
                    .addComponent(jLabel1)
                    .addComponent(qtdeEstoqueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQtdeUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQtdeEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataEstoqueLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bordaOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bordaErro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(217, 217, 217))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        painelProdutos.setVisible(false);
        painelProdutos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 102), 1, true));

        tableProduto.setBackground(new java.awt.Color(255, 255, 204));
        tableProduto.setModel(tabelaModelProd(listaBuscaProduto));
        tableProduto.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tableProduto);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Código do  Produto:");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Nome do Produto:");
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Descrição:");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Preço:");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Estoque:");
        jLabel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Localização:");
        jLabel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        LabelCod.setFont(new java.awt.Font("Tahoma", 1, 12));
        LabelCod.setText("---");
        LabelCod.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        labelNome.setFont(new java.awt.Font("Tahoma", 1, 12));
        labelNome.setText("---");
        labelNome.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        labelDescricao.setFont(new java.awt.Font("Tahoma", 1, 12));
        labelDescricao.setText("---");
        labelDescricao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        labelPreco.setFont(new java.awt.Font("Tahoma", 1, 12));
        labelPreco.setText("---");
        labelPreco.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        labelEstoque.setFont(new java.awt.Font("Tahoma", 1, 12));
        labelEstoque.setText("---");
        labelEstoque.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        labelLocalizacao.setFont(new java.awt.Font("Tahoma", 1, 12));
        labelLocalizacao.setText("--");
        labelLocalizacao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btImportar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btImportar.setText("Importar");
        btImportar.setToolTipText("Importar ");
        btImportar.addActionListener(formListener);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Lista de produtos Cadastrados");

        javax.swing.GroupLayout painelProdutosLayout = new javax.swing.GroupLayout(painelProdutos);
        painelProdutos.setLayout(painelProdutosLayout);
        painelProdutosLayout.setHorizontalGroup(
            painelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelProdutosLayout.createSequentialGroup()
                .addGroup(painelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelProdutosLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(painelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelPreco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LabelCod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelLocalizacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(painelProdutosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelProdutosLayout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(btImportar))
                    .addGroup(painelProdutosLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel8)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelProdutosLayout.setVerticalGroup(
            painelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelProdutosLayout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(btImportar)
                .addGap(18, 18, 18)
                .addGroup(painelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(LabelCod))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(labelNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(labelDescricao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(labelPreco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(labelEstoque))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(labelLocalizacao))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        brExcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        brExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/excluir32x32.png"))); // NOI18N
        brExcluir.setText("Excluir");
        brExcluir.setToolTipText("Excluir dados");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, table, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), brExcluir, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        brExcluir.addActionListener(formListener);

        btInserir.setFont(new java.awt.Font("Tahoma", 1, 12));
        btInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/inserir32x32.png"))); // NOI18N
        btInserir.setText("Inserir");
        btInserir.setToolTipText("Inserir dados");
        btInserir.addActionListener(formListener);

        btSalvar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/salvar32x32.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setToolTipText("Salvar dados");
        btSalvar.addActionListener(formListener);

        btCancelar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/cancelar32x32.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.setToolTipText("Cancelar dados");
        btCancelar.addActionListener(formListener);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(btInserir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(brExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSalvar))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {brExcluir, btCancelar, btInserir, btSalvar});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btCancelar)
                    .addComponent(brExcluir)
                    .addComponent(btInserir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btEditar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/editar.png"))); // NOI18N
        btEditar.setText("Editar");
        btEditar.setToolTipText("Editar dados");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, table, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btEditar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btEditar.addActionListener(formListener);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btEditar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(painelProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(painelProdutos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.ItemListener, java.awt.event.KeyListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == btBuscarproduto) {
                EstoqueView.this.btBuscarprodutoActionPerformed(evt);
            }
            else if (evt.getSource() == btImportar) {
                EstoqueView.this.btImportarActionPerformed(evt);
            }
            else if (evt.getSource() == brExcluir) {
                EstoqueView.this.brExcluirActionPerformed(evt);
            }
            else if (evt.getSource() == btInserir) {
                EstoqueView.this.btInserirActionPerformed(evt);
            }
            else if (evt.getSource() == btSalvar) {
                EstoqueView.this.btSalvarActionPerformed(evt);
            }
            else if (evt.getSource() == btCancelar) {
                EstoqueView.this.btCancelarActionPerformed(evt);
            }
            else if (evt.getSource() == btEditar) {
                EstoqueView.this.btEditarActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == comboBoxUnidade) {
                EstoqueView.this.comboBoxUnidadeFocusLost(evt);
            }
            else if (evt.getSource() == txtQtdeUnidade) {
                EstoqueView.this.txtQtdeUnidadeFocusLost(evt);
            }
        }

        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            if (evt.getSource() == comboBoxUnidade) {
                EstoqueView.this.comboBoxUnidadeItemStateChanged(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == txtData) {
                EstoqueView.this.txtDataKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == txtData) {
                EstoqueView.this.txtDataKeyTyped(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents
    @SuppressWarnings("unchecked")
    int cont = 0;
    EstoqueDAO estoqueDAO = new EstoqueDAO();
    ProdutoDAO produtoDAO = new ProdutoDAO();
    UnidadeDAO unidadeDAO = new UnidadeDAO();
    List<Estoque> listaEditaEstoque = estoqueDAO.listarTodosEstoques();
    List<Produto> listaComboBoxProduto = produtoDAO.listarTodosProdutos();
    List<Unidade> listaComboBoxUnidade = unidadeDAO.listarTodasUnidades();
    public static JFrame frame;

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        frame.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void brExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brExcluirActionPerformed
        int indexExcluir = table.getSelectedRow();

        Estoque excluirEstoque = listaEditaEstoque.get(indexExcluir);
        int excluido = estoqueDAO.excluirEstoque(excluirEstoque.getProduto().getCodProduto());
        listaEditaEstoque = estoqueDAO.listarTodosEstoques();
        table.setModel(tabelaModel(listaEditaEstoque));

        txtData.setText("");
        txtProduto.setText("");
        txtQtdeEstoque.setText("");
        txtQtdeUnidade.setText("");

        txtData.setEnabled(false);
        txtProduto.setEnabled(false);
        txtQtdeEstoque.setEnabled(false);
        txtQtdeUnidade.setEnabled(false);
    }//GEN-LAST:event_brExcluirActionPerformed

    private void btInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInserirActionPerformed
        cont = 2;
        txtProduto.setText("");
        txtQtdeEstoque.setText("");
        txtQtdeUnidade.setText("");
        txtData.setText("");
        comboBoxUnidade.setSelectedIndex(0);

        txtProduto.setEnabled(true);
        txtQtdeEstoque.setEnabled(true);
        txtQtdeUnidade.setEnabled(true);
        txtData.setEnabled(true);
        comboBoxUnidade.setEnabled(true);
        btBuscarproduto.setEnabled(true);
        txtProduto.requestFocus();

        table.setModel(tabelaModel(listaEditaEstoque));
        int row = listaEditaEstoque.size() - 1;
        table.scrollRectToVisible(table.getCellRect(row, 0, true));
    }//GEN-LAST:event_btInserirActionPerformed
    static Produto produtoImportado = new Produto();
    Utilitarios dataConv = new Utilitarios();
    List<Produto> listaBuscaProduto = produtoDAO.listarTodosProdutos();

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (cont % 2 == 0) {
            txtProduto.setText((produtoImportado.getNome()));
            Produto produto = produtoImportado;
            String tipoEstoque = comboBoxUnidade.getSelectedItem().toString();
            double qtdeEstoque = Double.valueOf(txtQtdeEstoque.getText());
            String data = (txtData.getText());
            Unidade Unidade = listaComboBoxUnidade.get(comboBoxUnidade.getSelectedIndex() - 1);

            Estoque estoque = new Estoque(produto, tipoEstoque, data, qtdeEstoque, Unidade, totalItens);

            int idEstoque = 0;
            try {
                idEstoque = estoqueDAO.inserirEstoque(estoque);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Produto já cadastrado no estoque!\n Selecionae o Produto Desejado e Clique em alterar.");
            }
            System.out.println(idEstoque);
            listaEditaEstoque.add(estoque);
            table.setModel(tabelaModel(listaEditaEstoque));
            int row = table.getRowCount() - 1;
            if (table.getRowCount() >= 1) {
                table.setRowSelectionInterval(row, row);
            }
            table.scrollRectToVisible(table.getCellRect(table.getRowCount() + 1, 0, true));
            comboBoxUnidade.setSelectedIndex(0);
            txtData.setText("");
            txtProduto.setText("");
            txtQtdeEstoque.setText("");
            txtQtdeUnidade.setText("");


        } else {
            String alterTipoEstoque = comboBoxUnidade.getSelectedItem().toString();
            String alterData = (txtData.getText());
            double alterQtde = Double.valueOf(txtQtdeUnidade.getText());
            String nomeProduto = txtProduto.getText();
            Produto produto = produtoDAO.consultarNomeProduto(nomeProduto);
            Unidade unidade = listaComboBoxUnidade.get(comboBoxUnidade.getSelectedIndex() - 1);
            double alterTotalItens = Double.valueOf(txtQtdeEstoque.getText());

            Estoque alterEstoque = listaEditaEstoque.get(table.getSelectedRow());

            alterEstoque.setProduto(produto);
            alterEstoque.setData(alterData);
            alterEstoque.setQuantidade(alterQtde);
            alterEstoque.setTipo(alterTipoEstoque);
            alterEstoque.setTotalItens(alterTotalItens);
            alterEstoque.setUnidade(unidade);

            estoqueDAO.alterarEstoqueTotal(alterEstoque);

            table.setModel(tabelaModel(listaEditaEstoque));

            txtData.setText("");

            txtProduto.setText("");
            txtQtdeEstoque.setText("");
            txtQtdeUnidade.setText("");
            comboBoxUnidade.setSelectedIndex(0);

            txtData.setBorder(bordaOk.getBorder());
            cont++;
            btEditar.setText("Editar");

        }
    }//GEN-LAST:event_btSalvarActionPerformed

private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
    if (cont % 2 == 0) {      //editar linha
        txtData.setEnabled(true);
        txtProduto.setEnabled(true);
        txtQtdeEstoque.setEnabled(true);
        txtQtdeUnidade.setEnabled(true);
        comboBoxUnidade.setEnabled(true);
        btBuscarproduto.setEnabled(true);

        btEditar.setText("Cancelar Edição");
        txtProduto.requestFocus();
        cont++;
        editarLinha();

    } else {                //cancelar edição
        txtData.setEnabled(false);
        txtProduto.setEnabled(false);
        txtQtdeEstoque.setEnabled(false);
        txtQtdeUnidade.setEnabled(false);
        comboBoxUnidade.setEnabled(false);
        btEditar.setText("Editar");
        txtProduto.requestFocus();
        cont++;
    }
}//GEN-LAST:event_btEditarActionPerformed

private void btBuscarprodutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarprodutoActionPerformed
    if (cont2 % 2 == 0) {
        painelProdutos.setVisible(true);
        frame.setSize(1000, 600);
        cont2++;
    } else {
        painelProdutos.setVisible(false);
        frame.setSize(600, 600);
        cont2++;
    }

}//GEN-LAST:event_btBuscarprodutoActionPerformed
    String unidadeSelecionada = "0";
private void comboBoxUnidadeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxUnidadeItemStateChanged
    unidadeSelecionada = (String) comboBoxUnidade.getSelectedItem();

}//GEN-LAST:event_comboBoxUnidadeItemStateChanged
    Produto ProdutoImportado = new Produto();
private void btImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImportarActionPerformed
    produtoImportado = listaBuscaProduto.get(tableProduto.getSelectedRow());

    txtProduto.setText(produtoImportado.getCodProduto() + " | " + produtoImportado.getNome());
}//GEN-LAST:event_btImportarActionPerformed

private void comboBoxUnidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboBoxUnidadeFocusLost
    txtQtdeUnidade.setText("1");
}//GEN-LAST:event_comboBoxUnidadeFocusLost
    private Integer totalItens;
private void txtQtdeUnidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQtdeUnidadeFocusLost
    try {
        totalItens = ((listaComboBoxUnidade.get(comboBoxUnidade.getSelectedIndex() - 1).getQtde()) * (Integer.valueOf(txtQtdeUnidade.getText())));
        txtQtdeEstoque.setText(String.valueOf(totalItens));
    } catch (NumberFormatException numberFormatException) {
        txtQtdeUnidade.requestFocus();
        txtQtdeUnidade.setBorder(bordaErro.getBorder());
        JOptionPane.showMessageDialog(null, "Valor incorreto");
    } catch (ArrayIndexOutOfBoundsException e) {
        JOptionPane.showMessageDialog(null, "Informe o Tipo de Unidade de estoque");
        comboBoxUnidade.requestFocus();
        comboBoxUnidade.setBorder(bordaErro.getBorder());
    }
}//GEN-LAST:event_txtQtdeUnidadeFocusLost

private void txtDataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataKeyPressed
    String texto = txtData.getText();
    if (texto.length() == 2) {
        texto = texto + "/";
        txtData.setText(texto);
    }
    if (texto.length() == 5) {
        texto = texto + "/";
        txtData.setText(texto);
    }


    if (evt.getKeyCode() == evt.VK_BACK_SPACE) {

        String BackFieldText = txtData.getText();
        if (!BackFieldText.equals("")) {
            String SubStr = BackFieldText.substring(0, BackFieldText.length() - 1);
            txtData.setText("" + SubStr);
        }
    }
}//GEN-LAST:event_txtDataKeyPressed

private void txtDataKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataKeyTyped
    if (txtData.getText().length() >= 10) {
        txtData.setText(txtData.getText().substring(0, 9));
        Toolkit.getDefaultToolkit().beep();
    }
}//GEN-LAST:event_txtDataKeyTyped
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelCod;
    private javax.swing.JTextField bordaErro;
    private javax.swing.JTextField bordaOk;
    private javax.swing.JButton brExcluir;
    private javax.swing.JButton btBuscarproduto;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btImportar;
    private javax.swing.JButton btInserir;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox comboBoxUnidade;
    private javax.swing.JLabel dataEstoqueLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelDescricao;
    private javax.swing.JLabel labelEstoque;
    private javax.swing.JLabel labelLocalizacao;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelPreco;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JPanel painelProdutos;
    private javax.swing.JLabel produtoCodProdutoLabel;
    private javax.swing.JLabel qtdeEstoqueLabel;
    private br.com.infortec.converter.RowSorterToStringConverter rowSorterToStringConverter1;
    private javax.swing.JTable table;
    private javax.swing.JTable tableProduto;
    private javax.swing.JLabel tipoEstoqueLabel;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtProduto;
    private javax.swing.JTextField txtQtdeEstoque;
    private javax.swing.JTextField txtQtdeUnidade;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public TableModel tabelaModel(List<Estoque> listaEstoques) {
        int n = 0;
        JTable table1;

        listaEstoques = estoqueDAO.listarTodosEstoques();
        Object[][] data = new Object[listaEstoques.size()][5];
        String[] columnNames = {"Cod Produto", "Unidade", "Data Estoque", "Qtde estoque", "Qtde Unidades"};
        for (Estoque estoques : listaEstoques) {
            data[n][0] = estoques.getProduto().getNome();
            data[n][1] = estoques.getTipo();
            data[n][2] = estoques.getData();
            data[n][3] = estoques.getQuantidade();
            data[n][4] = estoques.getUnidade().getCod();

            n++;
        }

        table1 = new JTable(data, columnNames);
        table1.setPreferredScrollableViewportSize(new Dimension(500, 300));
        table1.setFillsViewportHeight(true);
        table1.getColumnModel().getColumn(0).setPreferredWidth(100);
        table1.getColumnModel().getColumn(1).setPreferredWidth(300);
        table1.getColumnModel().getColumn(2).setPreferredWidth(300);
        javax.swing.table.TableModel model = table1.getModel();



        table.addMouseListener(new MouseAdapter() {

            public void mouseClicked(MouseEvent e) {
                if (cont % 2 == 1) {
                    editarLinha();
                }
            }
        });
        return model;//adiciona um modela a tabela

    }

    public void editarLinha() {
        //     int index = table.getSelectedRow();


        txtProduto.setText((String) table.getValueAt(table.getSelectedRow(), 0));

        String unidade = (String) table.getValueAt(table.getSelectedRow(), 1);
        //  Unidade unidade = unidadeDAO.consultarUnidade(codUnidade);
        //   comboBoxUnidade.setSelectedItem(unidade.getCod() + " | " + unidade.getDescricao() + " Com " + unidade.getQtde());
        comboBoxUnidade.setSelectedItem(unidade);

        txtData.setText((String) table.getValueAt(table.getSelectedRow(), 2));

        txtQtdeUnidade.setText((String) table.getValueAt(table.getSelectedRow(), 4).toString());

        txtQtdeEstoque.setText(table.getValueAt(table.getSelectedRow(), 3).toString());



    }

    public TableModel tabelaModelProd(List<Produto> listaProdutos) {
        int n = 0;
        JTable table1;

        listaProdutos = produtoDAO.listarTodosProdutos();
        Object[][] data = new Object[listaProdutos.size()][10];
        String[] columnNames = {"cod Produto", "Nome", "Descrição", "Valor Compra", "Valor Venda", "Estoque", "Localização", "Fornecedor", "Categoria", "Margem Lucro"};

        for (Produto produtos : listaProdutos) {
            data[n][0] = produtos.getCodProduto();
            data[n][1] = produtos.getNome();
            data[n][2] = produtos.getDescricao();
            data[n][3] = produtos.getValorCompra();
            data[n][4] = produtos.getValorVenda();
            data[n][5] = produtos.getEstoque();
            data[n][6] = produtos.getLocalizacao();
            data[n][7] = produtos.getFornecedor().getNome();
            data[n][8] = produtos.getCategoria().getnomeCategoria();
            data[n][9] = produtos.getMargemLucro();

            n++;
        }

        table1 = new JTable(data, columnNames);
        table1.setPreferredScrollableViewportSize(new Dimension(500, 300));
        table1.setFillsViewportHeight(true);
        table1.getColumnModel().getColumn(0).setPreferredWidth(100);
        table1.getColumnModel().getColumn(1).setPreferredWidth(300);
        table1.getColumnModel().getColumn(2).setPreferredWidth(300);
        javax.swing.table.TableModel model = table1.getModel();



        tableProduto.addMouseListener(new MouseAdapter() {

            public void mouseClicked(MouseEvent e) {

                editarLinha2();

            }
        });
        return model;//adiciona um modela a tabela
    }

    public void editarLinha2() {
        int index = tableProduto.getSelectedRow();
        LabelCod.setText(String.valueOf(tableProduto.getValueAt(tableProduto.getSelectedRow(), 0)));
        labelNome.setText((String) tableProduto.getValueAt(tableProduto.getSelectedRow(), 1).toString());
        labelDescricao.setText(tableProduto.getValueAt(tableProduto.getSelectedRow(), 2).toString());
        labelPreco.setText(String.valueOf(tableProduto.getValueAt(tableProduto.getSelectedRow(), 4)));
        labelEstoque.setText(String.valueOf(tableProduto.getValueAt(tableProduto.getSelectedRow(), 5)));
        labelLocalizacao.setText((String) tableProduto.getValueAt(tableProduto.getSelectedRow(), 6));

    }

    public void importaProduto(Produto produto) {
    }

    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(EstoqueView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(EstoqueView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(EstoqueView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(EstoqueView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {

            public void run() {
                frame = new JFrame();
                frame.setContentPane(new EstoqueView());
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
                frame.setResizable(false);

            }
        });
    }
}
