/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProdutoView.java
 *
 * Created on 25/11/2011, 07:59:31
 */
package br.com.infortec.view;

import br.com.infortec.DAO.CategoriaProdutoDAO;
import br.com.infortec.DAO.FornecedorDAO;
import br.com.infortec.DAO.ProdutoDAO;
import br.com.infortec.bean.CategoriaProduto;
import br.com.infortec.bean.Fornecedor;
import br.com.infortec.bean.Produto;
import br.com.infortec.util.CasasDecimais;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.TableModel;

/**
 *
 * @author Infortec
 */
public class ProdutoView extends JPanel {
    
    public ProdutoView() {
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private int cont = 0;
    private static JFrame frame = null;
    private int add = 0;    
      CategoriaProdutoDAO categoriaProdutoDAO = new CategoriaProdutoDAO();
    FornecedorDAO FornecedorDAO = new FornecedorDAO();
    //preenche o combobox de fornecedor
    private List<Fornecedor> listaComboBoxFornecedor = FornecedorDAO.listarTodosFornecedores();
    //preenche o combobox de Categoria
    List<CategoriaProduto> listaComboBoxCat = categoriaProdutoDAO.listarTodasCategoriasProdutos();
    //preenche a tabela de produtos
    ProdutoDAO produtoDAO = new ProdutoDAO();
    List<Produto> listaEditaProduto = produtoDAO.listarTodosProdutos();
    List<CategoriaProduto> listaCat = categoriaProdutoDAO.listarTodasCategoriasProdutos();
    CategoriaProduto[] arrayCat = new CategoriaProduto[listaCat.size()];
    List<Fornecedor> listaForne = FornecedorDAO.listarTodosFornecedores();
    Fornecedor[] arrayForne = new Fornecedor[listaForne.size()];
    private CasasDecimais casasDecimais = new CasasDecimais();
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        masterScrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable(){

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        jPanel2 = new javax.swing.JPanel();
        descricaoProdutoField = new javax.swing.JTextField();
        localizacaoProdutoField = new javax.swing.JTextField();
        estoqueField = new javax.swing.JTextField();
        estoqueLabel = new javax.swing.JLabel();
        nomeProdutoLabel = new javax.swing.JLabel();
        localizacaoProdutoLabel = new javax.swing.JLabel();
        nomeProdutoField = new javax.swing.JTextField();
        descricaoProdutoLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        FornecedorComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        categoriaComboBox = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        valorCompraProdutoLabel = new javax.swing.JLabel();
        valorCompraProdutoField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        MargemLucroTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lucroTextField = new javax.swing.JTextField();
        valorVendaProdutoLabel = new javax.swing.JLabel();
        valorVendaProdutoField = new javax.swing.JTextField();
        btTroca = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btSalvar = new javax.swing.JButton();
        btInserir = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("o valor da compra e mais outro valor para o calculo do preço de venda"), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));

        table.setBackground(new java.awt.Color(255, 255, 204));
        table.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        table.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        table.setModel(tabelaModel(listaEditaProduto));
        masterScrollPane.setViewportView(table);

        descricaoProdutoField.setEnabled(false);
        descricaoProdutoField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        descricaoProdutoField.setToolTipText("Informe os dados descritivos do produto");

        localizacaoProdutoField.setEnabled(false);
        localizacaoProdutoField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        localizacaoProdutoField.setToolTipText("");

        estoqueField.setEnabled(false);
        estoqueField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        estoqueLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        estoqueLabel.setText("Estoque:");

        nomeProdutoLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        nomeProdutoLabel.setText("Nome:");

        localizacaoProdutoLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        localizacaoProdutoLabel.setText("Localização:");

        nomeProdutoField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nomeProdutoField.setToolTipText("Informe o nome do produto");

        descricaoProdutoLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        descricaoProdutoLabel.setText("Descrição:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("Categoria:");

        FornecedorComboBox.setEnabled(false);
        FornecedorComboBox.addItem("");
        for (Fornecedor listaForne : listaComboBoxFornecedor) {
            add++;
            FornecedorComboBox.addItem(listaForne.getCodFornecedor() +" | "+ listaForne.getNome());

        }
        FornecedorComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FornecedorComboBox.setEnabled(false);
        FornecedorComboBox.setToolTipText("Selecione o fornecedor");
        FornecedorComboBox.addItemListener(formListener);
        FornecedorComboBox.addActionListener(formListener);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setText("Fornecedor:");

        categoriaComboBox.setEnabled(false);
        categoriaComboBox.addItem("");
        for (CategoriaProduto listaCat : listaComboBoxCat) {
            add++;
            categoriaComboBox.addItem(listaCat.getCodCategoria() +" | "+ listaCat.getnomeCategoria());

        }
        categoriaComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        categoriaComboBox.setEnabled(false);
        categoriaComboBox.setToolTipText("Selecione a categoria do produto");
        categoriaComboBox.addMouseListener(formListener);
        categoriaComboBox.addItemListener(formListener);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 0), null));

        valorCompraProdutoLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        valorCompraProdutoLabel.setText("Valor de Compra:");

        valorCompraProdutoField.setEnabled(false);
        valorCompraProdutoField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        valorCompraProdutoField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Margem de Lucro:");

        MargemLucroTextField.setEnabled(false);
        MargemLucroTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        MargemLucroTextField.addFocusListener(formListener);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel4.setText("%");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel5.setText("Lucro líquido:");

        lucroTextField.setEnabled(false);
        lucroTextField.setEditable(false);
        lucroTextField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        valorVendaProdutoLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        valorVendaProdutoLabel.setText("Valor de Venda:");

        valorVendaProdutoField.setEnabled(false);
        valorVendaProdutoField.setEditable(false);
        valorVendaProdutoField.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        valorVendaProdutoField.addFocusListener(formListener);

        btTroca.setEnabled(false);
        btTroca.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btTroca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/bttrocar.png"))); // NOI18N
        btTroca.setText("Recalcular");
        btTroca.setToolTipText("Recalcular");
        btTroca.addActionListener(formListener);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(valorCompraProdutoLabel)
                        .addGap(7, 7, 7))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lucroTextField)
                    .addComponent(valorCompraProdutoField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MargemLucroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(valorVendaProdutoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(valorVendaProdutoField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btTroca)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MargemLucroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(valorVendaProdutoLabel)
                            .addComponent(valorVendaProdutoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(valorCompraProdutoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(valorCompraProdutoLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lucroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(btTroca, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btEditar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/editar.png"))); // NOI18N
        btEditar.setText("Editar");
        btEditar.setToolTipText("Editar dados");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, table, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btEditar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btEditar.addActionListener(formListener);

        btSalvar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/salvar32x32.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setToolTipText("Salvar dados");
        btSalvar.addActionListener(formListener);

        btInserir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/inserir32x32.png"))); // NOI18N
        btInserir.setText("Inserir");
        btInserir.setToolTipText("Inserir dados");
        btInserir.addActionListener(formListener);

        btExcluir.setFont(new java.awt.Font("Tahoma", 1, 12));
        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/excluir32x32.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.setToolTipText("Excluir dados");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, table, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btExcluir, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btExcluir.addActionListener(formListener);

        btCancelar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/cancelar32x32.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.setToolTipText("Cancelar dados");
        btCancelar.addActionListener(formListener);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btInserir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSalvar)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btCancelar, btExcluir, btInserir, btSalvar});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btCancelar)
                    .addComponent(btExcluir)
                    .addComponent(btInserir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeProdutoField, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
                            .addComponent(nomeProdutoLabel)
                            .addComponent(descricaoProdutoLabel)
                            .addComponent(descricaoProdutoField, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(FornecedorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(categoriaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(localizacaoProdutoField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(localizacaoProdutoLabel))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(estoqueLabel)
                                    .addComponent(estoqueField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(btEditar)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(nomeProdutoLabel)
                .addGap(5, 5, 5)
                .addComponent(nomeProdutoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descricaoProdutoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descricaoProdutoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FornecedorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(localizacaoProdutoLabel)
                            .addComponent(estoqueLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(estoqueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoriaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(localizacaoProdutoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(btEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("");

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.ItemListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == FornecedorComboBox) {
                ProdutoView.this.FornecedorComboBoxActionPerformed(evt);
            }
            else if (evt.getSource() == btTroca) {
                ProdutoView.this.btTrocaActionPerformed(evt);
            }
            else if (evt.getSource() == btEditar) {
                ProdutoView.this.btEditarActionPerformed(evt);
            }
            else if (evt.getSource() == btSalvar) {
                ProdutoView.this.btSalvarActionPerformed(evt);
            }
            else if (evt.getSource() == btInserir) {
                ProdutoView.this.btInserirActionPerformed(evt);
            }
            else if (evt.getSource() == btExcluir) {
                ProdutoView.this.btExcluirActionPerformed(evt);
            }
            else if (evt.getSource() == btCancelar) {
                ProdutoView.this.btCancelarActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == valorVendaProdutoField) {
                ProdutoView.this.valorVendaProdutoFieldFocusGained(evt);
            }
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == MargemLucroTextField) {
                ProdutoView.this.MargemLucroTextFieldFocusLost(evt);
            }
            else if (evt.getSource() == valorVendaProdutoField) {
                ProdutoView.this.valorVendaProdutoFieldFocusLost(evt);
            }
        }

        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            if (evt.getSource() == FornecedorComboBox) {
                ProdutoView.this.FornecedorComboBoxItemStateChanged(evt);
            }
            else if (evt.getSource() == categoriaComboBox) {
                ProdutoView.this.categoriaComboBoxItemStateChanged(evt);
            }
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == categoriaComboBox) {
                ProdutoView.this.categoriaComboBoxMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents
    @SuppressWarnings("unchecked")

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
frame.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed
    
    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        int indexExcluir = table.getSelectedRow();
        
        Produto excluirProduto = listaEditaProduto.get(indexExcluir);
        int excluido = produtoDAO.excluirProduto(excluirProduto.getCodProduto());
        listaEditaProduto = produtoDAO.listarTodosProdutos();
        table.setModel(tabelaModel(listaEditaProduto));
        
        nomeProdutoField.setText("");
        descricaoProdutoField.setText("");
        valorCompraProdutoField.setText("");
        valorVendaProdutoField.setText("");
        estoqueField.setText("");
        localizacaoProdutoField.setText("");
        FornecedorComboBox.setSelectedIndex(0);
        categoriaComboBox.setSelectedIndex(0);
        MargemLucroTextField.setText("");
        lucroTextField.setText("");
        
        nomeProdutoField.setEnabled(false);
        descricaoProdutoField.setEnabled(false);
        valorCompraProdutoField.setEnabled(false);
        valorVendaProdutoField.setEnabled(false);
        estoqueField.setEnabled(false);
        localizacaoProdutoField.setEnabled(false);
        FornecedorComboBox.setEnabled(false);
        categoriaComboBox.setEnabled(false);
        MargemLucroTextField.setEnabled(false);
        lucroTextField.setEnabled(false);
    }//GEN-LAST:event_btExcluirActionPerformed
    Produto produtoBranco = new Produto();
    private void btInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInserirActionPerformed
        cont = 0;
        nomeProdutoField.setText("");
        descricaoProdutoField.setText("");
        valorCompraProdutoField.setText("");
        valorVendaProdutoField.setText("");
        estoqueField.setText("");
        localizacaoProdutoField.setText("");
        FornecedorComboBox.setSelectedIndex(0);
        categoriaComboBox.setSelectedIndex(0);
        MargemLucroTextField.setText("");
        lucroTextField.setText("");
        
        nomeProdutoField.setEnabled(true);
        descricaoProdutoField.setEnabled(true);
        valorCompraProdutoField.setEnabled(true);
        valorVendaProdutoField.setEnabled(true);
        estoqueField.setEnabled(true);
        localizacaoProdutoField.setEnabled(true);
        FornecedorComboBox.setEnabled(true);
        categoriaComboBox.setEnabled(true);
        MargemLucroTextField.setEnabled(true);
        lucroTextField.setEnabled(true);
        nomeProdutoField.requestFocus();
        btTroca.setEnabled(true);
        
        listaEditaProduto.add(produtoBranco);
        table.setModel(tabelaModel(listaEditaProduto));
        int row = listaEditaProduto.size() - 1;
        table.scrollRectToVisible(table.getCellRect(row, 0, true));
    }//GEN-LAST:event_btInserirActionPerformed
    
    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (cont % 2 == 0) {
            String nome = nomeProdutoField.getText();
            String Descricao = descricaoProdutoField.getText();
            double valorCompra = Double.valueOf(valorCompraProdutoField.getText());
            double valorVenda = Double.valueOf(valorVendaProdutoField.getText());
            double estoque = Double.valueOf(estoqueField.getText());
            Fornecedor fornecedor = listaComboBoxFornecedor.get(FornecedorComboBox.getSelectedIndex() - 1);
            CategoriaProduto categoriaProduto = listaComboBoxCat.get(categoriaComboBox.getSelectedIndex() - 1);
            double margem = Double.valueOf(MargemLucroTextField.getText());
            String localizacao = localizacaoProdutoField.getText();
            
            Produto produto = new Produto(nome, Descricao, valorCompra, valorVenda, estoque, localizacao, fornecedor, categoriaProduto, margem);
            int idProduto = produtoDAO.inserirproduto(produto);
            listaEditaProduto.add(produto);
            table.setModel(tabelaModel(listaEditaProduto));
            int row = table.getRowCount() - 1;
            if(table.getRowCount()>=1){
            table.setRowSelectionInterval(row, row);
            }
            table.scrollRectToVisible(table.getCellRect(table.getRowCount() + 1, 0, true));
            
            nomeProdutoField.setText("");
            descricaoProdutoField.setText("");
            valorCompraProdutoField.setText("");
            valorVendaProdutoField.setText("");
            estoqueField.setText("");
            localizacaoProdutoField.setText("");
            FornecedorComboBox.setSelectedIndex(0);
            categoriaComboBox.setSelectedIndex(0);
            MargemLucroTextField.setText("");
            lucroTextField.setText("");
        } else {
            
            String alterNome = nomeProdutoField.getText();
            String alterDescricao = descricaoProdutoField.getText();
            double alterValorCompra = Double.valueOf(valorCompraProdutoField.getText());
            double alterValorVenda = Double.valueOf(valorVendaProdutoField.getText());
            double alterEstoque = Double.valueOf(estoqueField.getText());
            String alterLocalizacao = localizacaoProdutoField.getText();
            
            CategoriaProduto categoriaProduto = listaComboBoxCat.get(categoriaComboBox.getSelectedIndex()-1);
            Fornecedor fornecedor = listaComboBoxFornecedor.get(FornecedorComboBox.getSelectedIndex()-1);


//            FornecedorSelecionado = (String) FornecedorComboBox.getSelectedItem();
//            int alterFornecedor = FornecedorSelecionado.charAt(0);
//            System.out.println("++++++++++++"+alterFornecedor);
//            Fornecedor fornecedor = FornecedorDAO.consultarFornecedor(alterFornecedor);

            double margemLucro = Double.valueOf(MargemLucroTextField.getText());
            
            Produto produtoAlterar = listaEditaProduto.get(table.getSelectedRow());
            
            produtoAlterar.setNome(alterNome);
            produtoAlterar.setDescrição(alterDescricao);
            produtoAlterar.setValorCompra(alterValorCompra);
            produtoAlterar.setValorVenda(alterValorVenda);
            produtoAlterar.setEstoque(alterEstoque);
            produtoAlterar.setLocalizacao(alterLocalizacao);
            produtoAlterar.setFornecedor(fornecedor);
            produtoAlterar.setCategoria(categoriaProduto);
            produtoAlterar.setMargemLucro(margemLucro);
            
            produtoDAO.alterarProduto(produtoAlterar);
            
            table.setModel(tabelaModel(listaEditaProduto));
            
            nomeProdutoField.setText("");
            descricaoProdutoField.setText("");
            valorCompraProdutoField.setText("");
            valorVendaProdutoField.setText("");
            estoqueField.setText("");
            localizacaoProdutoField.setText("");
            FornecedorComboBox.setSelectedIndex(0);
            categoriaComboBox.setSelectedIndex(0);
            MargemLucroTextField.setText("");
            lucroTextField.setText("");
            
        }
    }//GEN-LAST:event_btSalvarActionPerformed
    
private void categoriaComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoriaComboBoxMouseClicked
//    for (CategoriaProduto listaCat : listaComboBoxCat) {
//        categoriaComboBox.addItem(listaCat.getnomeCategoria());
//        add++;
//    }
//    for (int cont1 = 0; cont1 <= 10; cont1++) {
//        array[cont] = listaCat.get(cont);
//    }
//    for (int cont = 0; cont <= array.length; cont++) {
////for(int cont = 0;cont<=listaCat.size();cont++){
//        array[cont] = listaCat.get(cont);
//        categoriaComboBox = new JComboBox(array);
//    }
}//GEN-LAST:event_categoriaComboBoxMouseClicked
    
private void FornecedorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FornecedorComboBoxActionPerformed
}//GEN-LAST:event_FornecedorComboBoxActionPerformed
    String catSelecionada = "0";
    String FornecedorSelecionado = "0";
private void categoriaComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_categoriaComboBoxItemStateChanged
    catSelecionada = (String) categoriaComboBox.getSelectedItem();
    
}//GEN-LAST:event_categoriaComboBoxItemStateChanged
    
private void FornecedorComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_FornecedorComboBoxItemStateChanged
    FornecedorSelecionado = (String) FornecedorComboBox.getSelectedItem();
}//GEN-LAST:event_FornecedorComboBoxItemStateChanged
    
private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
    if (cont % 2 == 0) {      //editar linha
        nomeProdutoField.setEnabled(true);
        descricaoProdutoField.setEnabled(true);
        valorCompraProdutoField.setEnabled(true);
        valorVendaProdutoField.setEnabled(true);
        estoqueField.setEnabled(true);
        localizacaoProdutoField.setEnabled(true);
        FornecedorComboBox.setEnabled(true);
        categoriaComboBox.setEnabled(true);
        MargemLucroTextField.setEnabled(true);
        lucroTextField.setEnabled(true);
        btEditar.setText("Cancelar Edição");
        nomeProdutoField.requestFocus();
        cont++;
        editarLinha();
        
    } else {                //cancelar edição
        nomeProdutoField.setEnabled(false);
        descricaoProdutoField.setEnabled(false);
        valorCompraProdutoField.setEnabled(false);
        valorVendaProdutoField.setEnabled(false);
        estoqueField.setEnabled(false);
        localizacaoProdutoField.setEnabled(false);
        FornecedorComboBox.setEnabled(false);
        categoriaComboBox.setEnabled(false);
        MargemLucroTextField.setEnabled(false);
        lucroTextField.setEnabled(false);
        btEditar.setText("Editar");
        nomeProdutoField.requestFocus();
        cont++;
    }
    
}//GEN-LAST:event_btEditarActionPerformed
    
private void valorVendaProdutoFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorVendaProdutoFieldFocusGained
}//GEN-LAST:event_valorVendaProdutoFieldFocusGained
    CasasDecimais cd = new CasasDecimais();
private void valorVendaProdutoFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_valorVendaProdutoFieldFocusLost
    try {
        Double calculaMargem = (((Double.valueOf(valorVendaProdutoField.getText()) - (Double.valueOf(valorCompraProdutoField.getText())))) * 100) / (Double.valueOf(valorCompraProdutoField.getText()));
        MargemLucroTextField.setText(cd.converterDoubleString(calculaMargem));
        Double calculaLucro = ((Double.valueOf(valorVendaProdutoField.getText())) - (Double.valueOf(valorCompraProdutoField.getText())));
        lucroTextField.setText(casasDecimais.converterDoubleString(calculaLucro));
        calculaMargem = 0.0;
    } catch (NumberFormatException e) {
    } catch (NullPointerException es) {
    }
}//GEN-LAST:event_valorVendaProdutoFieldFocusLost
    
private void MargemLucroTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_MargemLucroTextFieldFocusLost
    try {
        Double calculaPreco = (Double.valueOf(valorCompraProdutoField.getText()) + (Double.valueOf(valorCompraProdutoField.getText()) * (Double.valueOf(MargemLucroTextField.getText()))) / 100);
        valorVendaProdutoField.setText(casasDecimais.converterDoubleString(calculaPreco));
        Double calculaLucro = Double.valueOf(valorVendaProdutoField.getText()) - Double.valueOf(valorCompraProdutoField.getText());
        lucroTextField.setText(casasDecimais.converterDoubleString(calculaLucro));
        calculaPreco = 0.0;
    } catch (NullPointerException e) {
    } catch (NumberFormatException es) {
    }
}//GEN-LAST:event_MargemLucroTextFieldFocusLost
    int troca = 0;
private void btTrocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTrocaActionPerformed
    if (troca % 2 == 0) {
        MargemLucroTextField.setText("");
        lucroTextField.setText("");
        valorVendaProdutoField.setText("");
        MargemLucroTextField.setEditable(false);
        MargemLucroTextField.setFocusable(false);
        MargemLucroTextField.setBackground(table.getBackground());
        valorVendaProdutoField.setBackground(nomeProdutoField.getBackground());
        valorVendaProdutoField.setEditable(true);
        valorVendaProdutoField.requestFocus();
        
        troca++;
    } else if (troca % 2 == 1) {
        MargemLucroTextField.setText("");
        lucroTextField.setText("");
        valorVendaProdutoField.setText("");
        MargemLucroTextField.setEditable(true);
        MargemLucroTextField.setFocusable(true);
        valorVendaProdutoField.setEditable(false);
        valorVendaProdutoField.setBackground(table.getBackground());
        MargemLucroTextField.setBackground(nomeProdutoField.getBackground());
        MargemLucroTextField.requestFocus();
        
        troca++;
    }
    
}//GEN-LAST:event_btTrocaActionPerformed
    public void calculavalor(Double compra, Double venda, Double margem, Double lucro) {
        Double[] valores = new Double[4];
        valores[0] = compra; //compra
        valores[2] = (lucro * 100) / compra;
        valores[3] = (compra * margem) / 100; //lucro
        valores[4] = compra + lucro; //venda

        valorCompraProdutoField.setText(valores[0].toString());
        valorVendaProdutoField.setText(valores[4].toString());
        MargemLucroTextField.setText(valores[2].toString());
        lucroTextField.setText(valores[3].toString());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox FornecedorComboBox;
    private javax.swing.JTextField MargemLucroTextField;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btInserir;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btTroca;
    public javax.swing.JComboBox categoriaComboBox;
    private javax.swing.JTextField descricaoProdutoField;
    private javax.swing.JLabel descricaoProdutoLabel;
    private javax.swing.JTextField estoqueField;
    private javax.swing.JLabel estoqueLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField localizacaoProdutoField;
    private javax.swing.JLabel localizacaoProdutoLabel;
    private javax.swing.JTextField lucroTextField;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTextField nomeProdutoField;
    private javax.swing.JLabel nomeProdutoLabel;
    private javax.swing.JTable table;
    private javax.swing.JTextField valorCompraProdutoField;
    private javax.swing.JLabel valorCompraProdutoLabel;
    private javax.swing.JTextField valorVendaProdutoField;
    private javax.swing.JLabel valorVendaProdutoLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ProdutoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ProdutoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ProdutoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ProdutoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>

        /* Create and display the form */
        
        EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                frame = new JFrame();
                frame.setContentPane(new ProdutoView());
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
    
    public TableModel tabelaModel(List<Produto> listaProdutos) {
        int n = 0;
        JTable table1;
       
        listaProdutos = produtoDAO.listarTodosProdutos();
        Object[][] data = new Object[listaProdutos.size()][10];
        String[] columnNames = {"cod Produto", "Nome", "Descrição", "Valor Compra", "Valor Venda", "Estoque", "Localização", "Fornecedor", "Categoria", "Margem Lucro"};
        
        for (Produto produtos : listaProdutos) {
            data[n][0] = produtos.getCodProduto();
            data[n][1] = produtos.getNome();
            data[n][2] = produtos.getDescricao();
            data[n][3] = produtos.getValorCompra();
            data[n][4] = produtos.getValorVenda();
            data[n][5] = produtos.getEstoque();
            data[n][6] = produtos.getLocalizacao();
            data[n][7] = produtos.getFornecedor().getNome();
            data[n][8] = produtos.getCategoria().getnomeCategoria();
            data[n][9] = produtos.getMargemLucro();
            
            n++;
        }
        
        table1 = new JTable(data, columnNames);
        table1.setPreferredScrollableViewportSize(new Dimension(500, 300));
        table1.setFillsViewportHeight(true);
        table1.getColumnModel().getColumn(0).setPreferredWidth(100);
        table1.getColumnModel().getColumn(1).setPreferredWidth(300);
        table1.getColumnModel().getColumn(2).setPreferredWidth(300);
        javax.swing.table.TableModel model = table1.getModel();
        
        
        
        table.addMouseListener(new MouseAdapter() {
            
            public void mouseClicked(MouseEvent e) {
                if (cont % 2 == 1) {
                    editarLinha();
                }
            }
        });
        return model;//adiciona um modela a tabela
    }
    //preenche o combobox de categoria
  
    
    public void editarLinha() {
        int index = table.getSelectedRow();
//FornecedorComboBox.addItem(listaForne.getCodFornecedor() +" | "+ listaForne.getNome());
//listaForne.get(table.getSelectedRow()).getCodFornecedor() +" | "+ listaForne.get(table.getSelectedRow()).getNome());
//listaCat.getCodCategoria() +" | "+ listaCat.getnomeCategoria()
        
        nomeProdutoField.setText((String) table.getValueAt(table.getSelectedRow(), 1));
        descricaoProdutoField.setText((String) table.getValueAt(table.getSelectedRow(), 2));
        valorCompraProdutoField.setText((String) table.getValueAt(table.getSelectedRow(), 3).toString());
        valorVendaProdutoField.setText(table.getValueAt(table.getSelectedRow(), 4).toString());
        estoqueField.setText(table.getValueAt(table.getSelectedRow(), 5).toString());
        localizacaoProdutoField.setText((String) table.getValueAt(table.getSelectedRow(), 6));

        int codproduto = (Integer)table.getValueAt(table.getSelectedRow(), 0);
        Produto produto = produtoDAO.consultarProduto(codproduto);
        FornecedorComboBox.setSelectedItem(produto.getFornecedor().getCodFornecedor() + " | " + produto.getFornecedor().getNome());
        
        categoriaComboBox.setSelectedItem(produto.getCategoria().getCodCategoria() + " | " + produto.getCategoria().getnomeCategoria());
                
        MargemLucroTextField.setText(table.getValueAt(table.getSelectedRow(), 9).toString());
        Double lucro = (Double) table.getValueAt(table.getSelectedRow(), 4) - (Double)table.getValueAt(table.getSelectedRow(), 3);
        lucroTextField.setText(lucro.toString());
    }
    public List<CategoriaProduto> getListaComboBoxCat() {
        return listaComboBoxCat;
    }
    
    public void setListaComboBoxCat(List<CategoriaProduto> listaComboBoxCat) {
        this.listaComboBoxCat = listaComboBoxCat;
    }
}
