/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FuncionarioView.java
 *
 * Created on 12/10/2011, 17:04:19
 */
package br.com.infortec.view;

import br.com.infortec.DAO.DepartamentoDAO;
import br.com.infortec.DAO.FuncionarioDAO;
import br.com.infortec.bean.Departamento;
import br.com.infortec.bean.Funcionario;
import br.com.infortec.util.CasasDecimais;
import br.com.infortec.util.LimitadorCaracteres;
import br.com.infortec.util.MecanicaCriptografaUtil;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.DataInputStream;
import java.security.NoSuchAlgorithmException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.RollbackException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.border.Border;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableModel;

/**
 *
 * @author Israelly
 */
public class FuncionarioView extends JPanel {

    public FuncionarioView() {
        initComponents();

    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    LimitadorCaracteres objLimitador = new LimitadorCaracteres();
    static JFrame frame;
    int add = 0;
    int cont = 0;
    // FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
    DepartamentoDAO departamentoDAO = new DepartamentoDAO();
    List<Departamento> ListaDepartamento = departamentoDAO.listarTodosDepartamentos();
    FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
    List<Funcionario> ListaEditaFuncionario = funcionarioDAO.listarTodosFuncionarios();
    CasasDecimais casasDecimais = new CasasDecimais();
    MecanicaCriptografaUtil criptaSenha = new MecanicaCriptografaUtil();

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroup1 = new javax.swing.ButtonGroup();
        tabPainel = new javax.swing.JTabbedPane();
        masterScrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable(){

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        jPanel2 = new javax.swing.JPanel();
        cpfFuncionariosLabel = new javax.swing.JLabel();
        ufFuncionarioLabel = new javax.swing.JLabel();
        emailFuncionarioField = new javax.swing.JTextField();
        nomeFuncionariosLabel = new javax.swing.JLabel();
        rgFuncionariosLabel = new javax.swing.JLabel();
        nascimentoFuncionarioLabel = new javax.swing.JLabel();
        nomeFuncionariosField = new javax.swing.JTextField();
        cidadeFuncionarioLabel = new javax.swing.JLabel();
        paisFuncionarioLabel = new javax.swing.JLabel();
        paisFuncionarioField = new javax.swing.JTextField();
        cepFuncionarioLabel = new javax.swing.JLabel();
        bairrolFuncionarioField = new javax.swing.JTextField();
        bairroFuncionarioLabel = new javax.swing.JLabel();
        cidadeFuncionarioField = new javax.swing.JTextField();
        ruaFuncionarioLabel = new javax.swing.JLabel();
        emailFuncionarioLabel = new javax.swing.JLabel();
        ruaFuncionarioField = new javax.swing.JTextField();
        senhaFuncionariosLabel = new javax.swing.JLabel();
        loginFuncionariosLabel = new javax.swing.JLabel();
        loginlFuncionarioField = new javax.swing.JTextField();
        ufFuncionarioField = new javax.swing.JComboBox();
        txtNumero = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        txtcpf = new javax.swing.JFormattedTextField();
        nascimentoFuncionarioField = new javax.swing.JFormattedTextField();
        IdadeLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        rgFuncionariosField = new javax.swing.JFormattedTextField();
        cepFuncionarioField = new javax.swing.JFormattedTextField();
        txtsenha = new javax.swing.JPasswordField();
        jPanel3 = new javax.swing.JPanel();
        comissaoFuncionariosLabel = new javax.swing.JLabel();
        comissaoFuncionariosField = new javax.swing.JTextField();
        demissaoFuncionariosLabel = new javax.swing.JLabel();
        admissaoFuncionariosField = new javax.swing.JTextField();
        admissaoFuncionariosLabel = new javax.swing.JLabel();
        demissaoFuncionariosField = new javax.swing.JTextField();
        salarioFuncionariosField = new javax.swing.JTextField();
        metaFuncionariosField = new javax.swing.JTextField();
        salarioFuncionariosLabel = new javax.swing.JLabel();
        metaFuncionariosLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        departamentoComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btExcluir = new javax.swing.JButton();
        btInserir = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        fotoPathLabel = new javax.swing.JLabel();
        fotoLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        bordaErro = new javax.swing.JTextField();
        bordaOk = new javax.swing.JTextField();
        toolTip = new javax.swing.JLabel();

        FormListener formListener = new FormListener();

        tabPainel.setForeground(java.awt.Color.blue);
        tabPainel.setFont(new java.awt.Font("Tahoma", 1, 14));

        table.setBackground(new java.awt.Color(255, 255, 204));
        table.setModel(tabelaModel(ListaEditaFuncionario));
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterScrollPane.setViewportView(table);

        tabPainel.addTab("Lista de Funcionários", masterScrollPane);

        cpfFuncionariosLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        cpfFuncionariosLabel.setText("CPF:");

        ufFuncionarioLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        ufFuncionarioLabel.setText("UF:");

        emailFuncionarioField.setEnabled(false);
        emailFuncionarioField.setFont(new java.awt.Font("Tahoma", 1, 12));
        emailFuncionarioField.setToolTipText("Informe um email válido");
        emailFuncionarioField.addFocusListener(formListener);

        nomeFuncionariosLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        nomeFuncionariosLabel.setText("Nome:");

        rgFuncionariosLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        rgFuncionariosLabel.setText("RG:");

        nascimentoFuncionarioLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        nascimentoFuncionarioLabel.setText("Nascimento:");

        nomeFuncionariosField.setEnabled(false);
        nomeFuncionariosField.setFont(new java.awt.Font("Tahoma", 1, 12));
        nomeFuncionariosField.setToolTipText("Informe o nome completo");
        nomeFuncionariosField.addFocusListener(formListener);

        cidadeFuncionarioLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        cidadeFuncionarioLabel.setText("Cidade:");

        paisFuncionarioLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        paisFuncionarioLabel.setText("País:");

        paisFuncionarioField.setEnabled(false);
        paisFuncionarioField.setFont(new java.awt.Font("Tahoma", 1, 12));
        paisFuncionarioField.setToolTipText("Informe o país");
        paisFuncionarioField.addFocusListener(formListener);

        cepFuncionarioLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        cepFuncionarioLabel.setText("CEP:");

        bairrolFuncionarioField.setEnabled(false);
        bairrolFuncionarioField.setFont(new java.awt.Font("Tahoma", 1, 12));
        bairrolFuncionarioField.setToolTipText("Informe o bairro");
        bairrolFuncionarioField.addFocusListener(formListener);

        bairroFuncionarioLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        bairroFuncionarioLabel.setText("Bairro:");

        cidadeFuncionarioField.setEnabled(false);
        cidadeFuncionarioField.setFont(new java.awt.Font("Tahoma", 1, 12));
        cidadeFuncionarioField.setToolTipText("Informe a cidade");
        cidadeFuncionarioField.addActionListener(formListener);
        cidadeFuncionarioField.addFocusListener(formListener);

        ruaFuncionarioLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        ruaFuncionarioLabel.setText("Logradouro:");

        emailFuncionarioLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        emailFuncionarioLabel.setText("Email:");

        ruaFuncionarioField.setEnabled(false);
        ruaFuncionarioField.setFont(new java.awt.Font("Tahoma", 1, 12));
        ruaFuncionarioField.setToolTipText("Informe o nome da rua");
        ruaFuncionarioField.addActionListener(formListener);
        ruaFuncionarioField.addFocusListener(formListener);

        senhaFuncionariosLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        senhaFuncionariosLabel.setText("Senha:");

        loginFuncionariosLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        loginFuncionariosLabel.setText("Login:");

        loginlFuncionarioField.setEnabled(false);
        loginlFuncionarioField.setFont(new java.awt.Font("Tahoma", 1, 12));
        loginlFuncionarioField.setToolTipText("Informe um login");
        loginlFuncionarioField.addFocusListener(formListener);

        ufFuncionarioField.setEnabled(false);
        ufFuncionarioField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        ufFuncionarioField.setToolTipText("Selecione o estado");
        ufFuncionarioField.addFocusListener(formListener);

        txtNumero.setEnabled(false);
        txtNumero.setFont(new java.awt.Font("Tahoma", 1, 12));
        txtNumero.setToolTipText("Informe o número do imóvel");
        txtNumero.addFocusListener(formListener);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Número:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setText("Complemento:");

        txtComplemento.setEnabled(false);
        txtComplemento.setFont(new java.awt.Font("Tahoma", 1, 12));
        txtComplemento.setToolTipText("Informe o complemento do imóvel");
        txtComplemento.addFocusListener(formListener);

        try {
            txtcpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtcpf.setToolTipText("Entre com o CPF");
        txtcpf.setFont(new java.awt.Font("Tahoma", 1, 12));
        txtcpf.addActionListener(formListener);
        txtcpf.addFocusListener(formListener);

        nascimentoFuncionarioField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM))));
        nascimentoFuncionarioField.setToolTipText("Informe a data de nascimento");
        nascimentoFuncionarioField.setFont(new java.awt.Font("Tahoma", 1, 12));
        nascimentoFuncionarioField.addFocusListener(formListener);
        nascimentoFuncionarioField.addKeyListener(formListener);

        IdadeLabel.setFont(new java.awt.Font("Tahoma", 1, 12));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel5.setText("Anos");

        rgFuncionariosField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        rgFuncionariosField.setToolTipText("Entre com o RG");
        rgFuncionariosField.setFont(new java.awt.Font("Tahoma", 1, 12));
        rgFuncionariosField.addFocusListener(formListener);

        try {
            cepFuncionarioField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cepFuncionarioField.setToolTipText("Entre com o CEP");
        cepFuncionarioField.setFont(new java.awt.Font("Tahoma", 1, 12));
        cepFuncionarioField.addFocusListener(formListener);

        txtsenha.setToolTipText("Informe uma senha");
        txtsenha.addFocusListener(formListener);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nomeFuncionariosLabel)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cpfFuncionariosLabel)
                            .addComponent(txtcpf, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rgFuncionariosLabel)
                            .addComponent(rgFuncionariosField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(nascimentoFuncionarioField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IdadeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5))
                            .addComponent(nascimentoFuncionarioLabel)))
                    .addComponent(ruaFuncionarioLabel)
                    .addComponent(nomeFuncionariosField, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(loginlFuncionarioField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(loginFuncionariosLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(senhaFuncionariosLabel)
                                    .addComponent(txtsenha, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(emailFuncionarioLabel)
                                        .addGap(229, 229, 229))
                                    .addComponent(emailFuncionarioField, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(bairroFuncionarioLabel)
                                            .addComponent(bairrolFuncionarioField, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cidadeFuncionarioField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cidadeFuncionarioLabel))
                                        .addGap(15, 15, 15)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ufFuncionarioLabel)
                                            .addComponent(ufFuncionarioField, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(paisFuncionarioLabel)
                                            .addComponent(paisFuncionarioField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(cepFuncionarioLabel)
                                    .addComponent(txtNumero, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                    .addComponent(cepFuncionarioField, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)))
                            .addComponent(ruaFuncionarioField))
                        .addGap(2, 2, 2)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nomeFuncionariosLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeFuncionariosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfFuncionariosLabel)
                    .addComponent(rgFuncionariosLabel)
                    .addComponent(nascimentoFuncionarioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(IdadeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(nascimentoFuncionarioField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rgFuncionariosField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(txtcpf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ruaFuncionarioLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ruaFuncionarioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bairroFuncionarioLabel)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bairrolFuncionarioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ufFuncionarioLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE)
                        .addComponent(cidadeFuncionarioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(paisFuncionarioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cepFuncionarioLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paisFuncionarioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ufFuncionarioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cidadeFuncionarioField)
                    .addComponent(cepFuncionarioField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailFuncionarioLabel)
                    .addComponent(senhaFuncionariosLabel)
                    .addComponent(loginFuncionariosLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginlFuncionarioField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailFuncionarioField)
                    .addComponent(txtsenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        emailFuncionarioField.setEnabled(false);

        tabPainel.addTab("Dados Pessoais", jPanel2);

        comissaoFuncionariosLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        comissaoFuncionariosLabel.setText("Comissão:");

        comissaoFuncionariosField.setEnabled(false);
        comissaoFuncionariosField.addActionListener(formListener);
        comissaoFuncionariosField.addFocusListener(formListener);

        demissaoFuncionariosLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        demissaoFuncionariosLabel.setText("Data da Demissão:");

        admissaoFuncionariosField.setEnabled(false);
        admissaoFuncionariosField.setToolTipText("Data de admissão");
        admissaoFuncionariosField.addActionListener(formListener);
        admissaoFuncionariosField.addFocusListener(formListener);
        admissaoFuncionariosField.addKeyListener(formListener);

        admissaoFuncionariosLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        admissaoFuncionariosLabel.setText("Data da Admissão:");

        demissaoFuncionariosField.setEnabled(false);
        demissaoFuncionariosField.setToolTipText("Data de emissão");
        demissaoFuncionariosField.addActionListener(formListener);
        demissaoFuncionariosField.addFocusListener(formListener);
        demissaoFuncionariosField.addKeyListener(formListener);

        salarioFuncionariosField.setEnabled(false);
        salarioFuncionariosField.addFocusListener(formListener);
        salarioFuncionariosField.addKeyListener(formListener);

        metaFuncionariosField.setEnabled(false);
        metaFuncionariosField.addActionListener(formListener);
        metaFuncionariosField.addFocusListener(formListener);

        salarioFuncionariosLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        salarioFuncionariosLabel.setText("Salário:");

        metaFuncionariosLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        metaFuncionariosLabel.setText("Meta:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("Departamento:");

        departamentoComboBox.addItem("");
        for (Departamento listaCombobox : ListaDepartamento) {
            add++;
            departamentoComboBox.addItem(listaCombobox.getCodDepartamento() +" | "+ listaCombobox.getNome());
        }
        departamentoComboBox.setToolTipText("Selecione o departamento");
        departamentoComboBox.setEnabled(false);
        departamentoComboBox.addFocusListener(formListener);

        jLabel4.setText("%");

        jLabel6.setText("R$");

        jLabel7.setText("R$");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(admissaoFuncionariosField, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(admissaoFuncionariosLabel)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(salarioFuncionariosLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7))
                            .addComponent(salarioFuncionariosField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(metaFuncionariosLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6))
                                    .addComponent(metaFuncionariosField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comissaoFuncionariosLabel)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(comissaoFuncionariosField, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel4))))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(demissaoFuncionariosField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(demissaoFuncionariosLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jLabel2)
                    .addComponent(departamentoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(228, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(departamentoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salarioFuncionariosLabel)
                            .addComponent(metaFuncionariosLabel)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salarioFuncionariosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(metaFuncionariosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(admissaoFuncionariosLabel)
                            .addComponent(demissaoFuncionariosLabel)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(comissaoFuncionariosLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comissaoFuncionariosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(admissaoFuncionariosField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(demissaoFuncionariosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(174, Short.MAX_VALUE))
        );

        tabPainel.addTab("Dados Profissionais", jPanel3);

        btExcluir.setFont(new java.awt.Font("Tahoma", 1, 12));
        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/excluir32x32.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.setToolTipText("Excluir dados");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, table, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btExcluir, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btExcluir.addActionListener(formListener);
        btExcluir.addFocusListener(formListener);

        btInserir.setFont(new java.awt.Font("Tahoma", 1, 12));
        btInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/inserir32x32.png"))); // NOI18N
        btInserir.setText("Inserir");
        btInserir.setToolTipText("Inserir dados");
        btInserir.addActionListener(formListener);
        btInserir.addFocusListener(formListener);

        btCancelar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/cancelar32x32.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.setToolTipText("Cancelar dados");
        btCancelar.addActionListener(formListener);
        btCancelar.addFocusListener(formListener);

        btSalvar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/salvar32x32.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.setToolTipText("Salvar dados");
        btSalvar.addActionListener(formListener);
        btSalvar.addFocusListener(formListener);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btInserir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSalvar)
                .addGap(141, 141, 141))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btCancelar, btExcluir, btInserir});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btInserir)
                    .addComponent(btCancelar)
                    .addComponent(btExcluir)
                    .addComponent(btSalvar)))
        );

        btEditar.setFont(new java.awt.Font("Tahoma", 1, 12));
        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/editar.png"))); // NOI18N
        btEditar.setText("Editar");
        btEditar.setToolTipText("Editar dados");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, table, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), btEditar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        btEditar.addActionListener(formListener);
        btEditar.addFocusListener(formListener);

        fotoPathLabel.setVisible(false);
        fotoPathLabel.setText("FotoPath");

        fotoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fotoLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infortec/imagens/1323002411_import.png"))); // NOI18N
        jButton1.setText("Carregar Foto");
        jButton1.addActionListener(formListener);

        bordaErro.setVisible(false);
        bordaErro.setText("jTextField1");
        bordaErro.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 102, 102)));

        bordaOk.setVisible(false);
        bordaOk.setText("jTextField2");

        toolTip.setText("toolTip");
        toolTip.addFocusListener(formListener);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tabPainel, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fotoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                        .addComponent(bordaOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bordaErro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fotoPathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(toolTip)
                        .addGap(48, 48, 48)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tabPainel, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(fotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btEditar)
                    .addComponent(fotoPathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(bordaErro, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(bordaOk, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toolTip))
                .addGap(11, 11, 11))
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.KeyListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == cidadeFuncionarioField) {
                FuncionarioView.this.cidadeFuncionarioFieldActionPerformed(evt);
            }
            else if (evt.getSource() == ruaFuncionarioField) {
                FuncionarioView.this.ruaFuncionarioFieldActionPerformed(evt);
            }
            else if (evt.getSource() == txtcpf) {
                FuncionarioView.this.txtcpfActionPerformed(evt);
            }
            else if (evt.getSource() == comissaoFuncionariosField) {
                FuncionarioView.this.comissaoFuncionariosFieldActionPerformed(evt);
            }
            else if (evt.getSource() == admissaoFuncionariosField) {
                FuncionarioView.this.admissaoFuncionariosFieldActionPerformed(evt);
            }
            else if (evt.getSource() == demissaoFuncionariosField) {
                FuncionarioView.this.demissaoFuncionariosFieldActionPerformed(evt);
            }
            else if (evt.getSource() == metaFuncionariosField) {
                FuncionarioView.this.metaFuncionariosFieldActionPerformed(evt);
            }
            else if (evt.getSource() == btExcluir) {
                FuncionarioView.this.btExcluirActionPerformed(evt);
            }
            else if (evt.getSource() == btInserir) {
                FuncionarioView.this.btInserirActionPerformed(evt);
            }
            else if (evt.getSource() == btCancelar) {
                FuncionarioView.this.btCancelarActionPerformed(evt);
            }
            else if (evt.getSource() == btSalvar) {
                FuncionarioView.this.btSalvarActionPerformed(evt);
            }
            else if (evt.getSource() == btEditar) {
                FuncionarioView.this.btEditarActionPerformed(evt);
            }
            else if (evt.getSource() == jButton1) {
                FuncionarioView.this.jButton1ActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == txtNumero) {
                FuncionarioView.this.txtNumeroFocusGained(evt);
            }
            else if (evt.getSource() == rgFuncionariosField) {
                FuncionarioView.this.rgFuncionariosFieldFocusGained(evt);
            }
            else if (evt.getSource() == nomeFuncionariosField) {
                FuncionarioView.this.nomeFuncionariosFieldFocusGained(evt);
            }
            else if (evt.getSource() == toolTip) {
                FuncionarioView.this.toolTipFocusGained(evt);
            }
            else if (evt.getSource() == txtcpf) {
                FuncionarioView.this.txtcpfFocusGained(evt);
            }
            else if (evt.getSource() == nascimentoFuncionarioField) {
                FuncionarioView.this.nascimentoFuncionarioFieldFocusGained(evt);
            }
            else if (evt.getSource() == ruaFuncionarioField) {
                FuncionarioView.this.ruaFuncionarioFieldFocusGained(evt);
            }
            else if (evt.getSource() == txtComplemento) {
                FuncionarioView.this.txtComplementoFocusGained(evt);
            }
            else if (evt.getSource() == bairrolFuncionarioField) {
                FuncionarioView.this.bairrolFuncionarioFieldFocusGained(evt);
            }
            else if (evt.getSource() == cidadeFuncionarioField) {
                FuncionarioView.this.cidadeFuncionarioFieldFocusGained(evt);
            }
            else if (evt.getSource() == ufFuncionarioField) {
                FuncionarioView.this.ufFuncionarioFieldFocusGained(evt);
            }
            else if (evt.getSource() == paisFuncionarioField) {
                FuncionarioView.this.paisFuncionarioFieldFocusGained(evt);
            }
            else if (evt.getSource() == cepFuncionarioField) {
                FuncionarioView.this.cepFuncionarioFieldFocusGained(evt);
            }
            else if (evt.getSource() == loginlFuncionarioField) {
                FuncionarioView.this.loginlFuncionarioFieldFocusGained(evt);
            }
            else if (evt.getSource() == txtsenha) {
                FuncionarioView.this.txtsenhaFocusGained(evt);
            }
            else if (evt.getSource() == emailFuncionarioField) {
                FuncionarioView.this.emailFuncionarioFieldFocusGained(evt);
            }
            else if (evt.getSource() == departamentoComboBox) {
                FuncionarioView.this.departamentoComboBoxFocusGained(evt);
            }
            else if (evt.getSource() == salarioFuncionariosField) {
                FuncionarioView.this.salarioFuncionariosFieldFocusGained(evt);
            }
            else if (evt.getSource() == metaFuncionariosField) {
                FuncionarioView.this.metaFuncionariosFieldFocusGained(evt);
            }
            else if (evt.getSource() == comissaoFuncionariosField) {
                FuncionarioView.this.comissaoFuncionariosFieldFocusGained(evt);
            }
            else if (evt.getSource() == admissaoFuncionariosField) {
                FuncionarioView.this.admissaoFuncionariosFieldFocusGained(evt);
            }
            else if (evt.getSource() == demissaoFuncionariosField) {
                FuncionarioView.this.demissaoFuncionariosFieldFocusGained(evt);
            }
            else if (evt.getSource() == btEditar) {
                FuncionarioView.this.btEditarFocusGained(evt);
            }
            else if (evt.getSource() == btInserir) {
                FuncionarioView.this.btInserirFocusGained(evt);
            }
            else if (evt.getSource() == btExcluir) {
                FuncionarioView.this.btExcluirFocusGained(evt);
            }
            else if (evt.getSource() == btCancelar) {
                FuncionarioView.this.btCancelarFocusGained(evt);
            }
            else if (evt.getSource() == btSalvar) {
                FuncionarioView.this.btSalvarFocusGained(evt);
            }
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == nomeFuncionariosField) {
                FuncionarioView.this.nomeFuncionariosFieldFocusLost(evt);
            }
            else if (evt.getSource() == nascimentoFuncionarioField) {
                FuncionarioView.this.nascimentoFuncionarioFieldFocusLost(evt);
            }
            else if (evt.getSource() == txtsenha) {
                FuncionarioView.this.txtsenhaFocusLost(evt);
            }
            else if (evt.getSource() == comissaoFuncionariosField) {
                FuncionarioView.this.comissaoFuncionariosFieldFocusLost(evt);
            }
            else if (evt.getSource() == salarioFuncionariosField) {
                FuncionarioView.this.salarioFuncionariosFieldFocusLost(evt);
            }
            else if (evt.getSource() == metaFuncionariosField) {
                FuncionarioView.this.metaFuncionariosFieldFocusLost(evt);
            }
            else if (evt.getSource() == departamentoComboBox) {
                FuncionarioView.this.departamentoComboBoxFocusLost(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == nascimentoFuncionarioField) {
                FuncionarioView.this.nascimentoFuncionarioFieldKeyPressed(evt);
            }
            else if (evt.getSource() == admissaoFuncionariosField) {
                FuncionarioView.this.admissaoFuncionariosFieldKeyPressed(evt);
            }
            else if (evt.getSource() == demissaoFuncionariosField) {
                FuncionarioView.this.demissaoFuncionariosFieldKeyPressed(evt);
            }
            else if (evt.getSource() == salarioFuncionariosField) {
                FuncionarioView.this.salarioFuncionariosFieldKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == nascimentoFuncionarioField) {
                FuncionarioView.this.nascimentoFuncionarioFieldKeyTyped(evt);
            }
            else if (evt.getSource() == admissaoFuncionariosField) {
                FuncionarioView.this.admissaoFuncionariosFieldKeyTyped(evt);
            }
            else if (evt.getSource() == demissaoFuncionariosField) {
                FuncionarioView.this.demissaoFuncionariosFieldKeyTyped(evt);
            }
            else if (evt.getSource() == salarioFuncionariosField) {
                FuncionarioView.this.salarioFuncionariosFieldKeyTyped(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("unchecked")
    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        frame.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        int indexExcluir = table.getSelectedRow();

        Funcionario excluirFuncionario = ListaEditaFuncionario.get(indexExcluir);
        int excluido = funcionarioDAO.excluirFuncionarios(excluirFuncionario.getCod());
        ListaEditaFuncionario = funcionarioDAO.listarTodosFuncionarios();
        table.setModel(tabelaModel(ListaEditaFuncionario));

        txtcpf.setText("");
        ufFuncionarioField.setSelectedIndex(0);
        emailFuncionarioField.setText("");
        nomeFuncionariosField.setText("");
        rgFuncionariosField.setText("");
        nascimentoFuncionarioField.setText("");
        rgFuncionariosField.setText("");
        cidadeFuncionarioField.setText("");
        paisFuncionarioField.setText("");
        cepFuncionarioField.setText("");
        bairroFuncionarioLabel.setText("");
        cidadeFuncionarioField.setText("");
        ruaFuncionarioField.setText("");
        txtsenha.setText("");
        loginlFuncionarioField.setText("");
        comissaoFuncionariosField.setText("");
        demissaoFuncionariosField.setText("");
        admissaoFuncionariosField.setText("");
        salarioFuncionariosField.setText("");
        metaFuncionariosField.setText("");
        txtComplemento.setText("");
        txtNumero.setText("");
        IdadeLabel.setText("");
        txtcpf.setBorder(bordaOk.getBorder());
        emailFuncionarioField.setBorder(bordaOk.getBorder());
        nomeFuncionariosField.setBorder(bordaOk.getBorder());
        rgFuncionariosField.setBorder(bordaOk.getBorder());
        nascimentoFuncionarioField.setBorder(bordaOk.getBorder());
        rgFuncionariosField.setBorder(bordaOk.getBorder());
        cidadeFuncionarioField.setBorder(bordaOk.getBorder());
        paisFuncionarioField.setBorder(bordaOk.getBorder());
        cepFuncionarioField.setBorder(bordaOk.getBorder());
        bairrolFuncionarioField.setBorder(bordaOk.getBorder());
        cidadeFuncionarioField.setBorder(bordaOk.getBorder());
        ruaFuncionarioField.setBorder(bordaOk.getBorder());
        txtsenha.setBorder(bordaOk.getBorder());
        loginlFuncionarioField.setBorder(bordaOk.getBorder());
        comissaoFuncionariosField.setBorder(bordaOk.getBorder());
        demissaoFuncionariosField.setBorder(bordaOk.getBorder());
        admissaoFuncionariosField.setBorder(bordaOk.getBorder());
        salarioFuncionariosField.setBorder(bordaOk.getBorder());
        metaFuncionariosField.setBorder(bordaOk.getBorder());
        departamentoComboBox.setBorder(bordaOk.getBorder());
        departamentoComboBox.setSelectedIndex(0);

        txtcpf.setEnabled(false);
        ufFuncionarioField.setEnabled(false);
        emailFuncionarioField.setEnabled(false);
        nomeFuncionariosField.setEnabled(false);
        rgFuncionariosField.setEnabled(false);
        nascimentoFuncionarioField.setEnabled(false);
        rgFuncionariosField.setEnabled(false);
        cidadeFuncionarioField.setEnabled(false);
        paisFuncionarioField.setEnabled(false);
        cepFuncionarioField.setEnabled(false);
        bairroFuncionarioLabel.setEnabled(false);
        cidadeFuncionarioField.setEnabled(false);
        ruaFuncionarioField.setEnabled(false);
        txtsenha.setEnabled(false);
        loginlFuncionarioField.setEnabled(false);
        comissaoFuncionariosField.setEnabled(false);
        demissaoFuncionariosField.setEnabled(false);
        admissaoFuncionariosField.setEnabled(false);
        salarioFuncionariosField.setEnabled(false);
        metaFuncionariosField.setEnabled(false);
        txtComplemento.setEnabled(false);
        txtNumero.setEnabled(false);
        departamentoComboBox.setSelectedIndex(1);
        nomeFuncionariosField.requestFocus();

    }//GEN-LAST:event_btExcluirActionPerformed

    private void btInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInserirActionPerformed
        System.out.println(txtcpf.getText());
        //        cont = 2;
        txtcpf.setText("");
        ufFuncionarioField.setSelectedIndex(0);
        emailFuncionarioField.setText("");
        nomeFuncionariosField.setText("");
        rgFuncionariosField.setText("");
        nascimentoFuncionarioField.setText("");
        rgFuncionariosField.setText("");
        cidadeFuncionarioField.setText("");
        paisFuncionarioField.setText("");
        cepFuncionarioField.setText("");
        bairrolFuncionarioField.setText("");
        cidadeFuncionarioField.setText("");
        ruaFuncionarioField.setText("");
        txtsenha.setText("");
        loginlFuncionarioField.setText("");
        comissaoFuncionariosField.setText("");
        demissaoFuncionariosField.setText("");
        admissaoFuncionariosField.setText("");
        salarioFuncionariosField.setText("");
        metaFuncionariosField.setText("");
        txtComplemento.setText("");
        txtNumero.setText("");
        IdadeLabel.setText("");
        txtcpf.setBorder(bordaOk.getBorder());
        emailFuncionarioField.setBorder(bordaOk.getBorder());
        nomeFuncionariosField.setBorder(bordaOk.getBorder());
        rgFuncionariosField.setBorder(bordaOk.getBorder());
        nascimentoFuncionarioField.setBorder(bordaOk.getBorder());
        rgFuncionariosField.setBorder(bordaOk.getBorder());
        cidadeFuncionarioField.setBorder(bordaOk.getBorder());
        paisFuncionarioField.setBorder(bordaOk.getBorder());
        cepFuncionarioField.setBorder(bordaOk.getBorder());
        bairrolFuncionarioField.setBorder(bordaOk.getBorder());
        cidadeFuncionarioField.setBorder(bordaOk.getBorder());
        ruaFuncionarioField.setBorder(bordaOk.getBorder());
        txtsenha.setBorder(bordaOk.getBorder());
        loginlFuncionarioField.setBorder(bordaOk.getBorder());
        comissaoFuncionariosField.setBorder(bordaOk.getBorder());
        demissaoFuncionariosField.setBorder(bordaOk.getBorder());
        admissaoFuncionariosField.setBorder(bordaOk.getBorder());
        salarioFuncionariosField.setBorder(bordaOk.getBorder());
        metaFuncionariosField.setBorder(bordaOk.getBorder());
        departamentoComboBox.setBorder(bordaOk.getBorder());
        departamentoComboBox.setSelectedIndex(0);
        tabPainel.setSelectedIndex(1);
        nomeFuncionariosField.requestFocus();
        CarregaImage("");

        txtcpf.setEnabled(true);
        ufFuncionarioField.setEnabled(true);
        emailFuncionarioField.setEnabled(true);
        nomeFuncionariosField.setEnabled(true);
        rgFuncionariosField.setEnabled(true);
        nascimentoFuncionarioField.setEnabled(true);
        rgFuncionariosField.setEnabled(true);
        cidadeFuncionarioField.setEnabled(true);
        paisFuncionarioField.setEnabled(true);
        cepFuncionarioField.setEnabled(true);
        bairrolFuncionarioField.setEnabled(true);
        cidadeFuncionarioField.setEnabled(true);
        ruaFuncionarioField.setEnabled(true);
        txtsenha.setEnabled(true);
        loginlFuncionarioField.setEnabled(true);
        comissaoFuncionariosField.setEnabled(true);
        demissaoFuncionariosField.setEnabled(true);
        admissaoFuncionariosField.setEnabled(true);
        salarioFuncionariosField.setEnabled(true);
        metaFuncionariosField.setEnabled(true);
        departamentoComboBox.setEnabled(true);
        txtComplemento.setEnabled(true);
        txtNumero.setEnabled(true);
        departamentoComboBox.setSelectedIndex(0);
        tabPainel.setSelectedIndex(1);
        nomeFuncionariosField.requestFocus();

    }//GEN-LAST:event_btInserirActionPerformed

    private void comissaoFuncionariosFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comissaoFuncionariosFieldActionPerformed
    }//GEN-LAST:event_comissaoFuncionariosFieldActionPerformed

private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
    if (cont % 2 == 0) {      //editar linha
        nomeFuncionariosField.setEnabled(true);
        txtcpf.setEnabled(true);
        rgFuncionariosField.setEnabled(true);
        salarioFuncionariosField.setEnabled(true);
        comissaoFuncionariosField.setEnabled(true);
        metaFuncionariosLabel.setEnabled(true);
        admissaoFuncionariosField.setEnabled(true);
        demissaoFuncionariosField.setEnabled(true);
        loginlFuncionarioField.setEnabled(true);
        txtsenha.setEnabled(true);
        ruaFuncionarioField.setEnabled(true);
        bairrolFuncionarioField.setEnabled(true);
        cidadeFuncionarioField.setEnabled(true);
        ufFuncionarioField.setEnabled(true);
        cepFuncionarioField.setEnabled(true);
        paisFuncionarioField.setEnabled(true);
        nascimentoFuncionarioField.setEnabled(true);
        emailFuncionarioField.setEnabled(true);
        departamentoComboBox.setEnabled(true);
        txtComplemento.setEnabled(true);
        txtNumero.setEnabled(true);
        metaFuncionariosField.setEnabled(true);

        btEditar.setText("Cancelar Edição");
        tabPainel.setSelectedIndex(1);
        nomeFuncionariosField.requestFocus();
        cont++;
        editarLinha();


    } else {                //cancelar edição
        nomeFuncionariosField.setEnabled(false);
        txtcpf.setEnabled(false);
        rgFuncionariosField.setEnabled(false);
        salarioFuncionariosField.setEnabled(false);
        comissaoFuncionariosField.setEnabled(false);
        metaFuncionariosLabel.setEnabled(false);
        admissaoFuncionariosField.setEnabled(false);
        demissaoFuncionariosField.setEnabled(false);
        loginlFuncionarioField.setEnabled(false);
        txtsenha.setEnabled(false);
        ruaFuncionarioField.setEnabled(false);
        bairrolFuncionarioField.setEnabled(false);
        cidadeFuncionarioField.setEnabled(false);
        ufFuncionarioField.setEnabled(false);
        cepFuncionarioField.setEnabled(false);
        paisFuncionarioField.setEnabled(false);
        nascimentoFuncionarioField.setEnabled(false);
        emailFuncionarioField.setEnabled(false);
        departamentoComboBox.setEnabled(false);
        txtComplemento.setEnabled(false);
        txtNumero.setEnabled(false);
        metaFuncionariosField.setEnabled(false);
        txtcpf.setText("");
        ufFuncionarioField.setSelectedIndex(0);
        emailFuncionarioField.setText("");
        nomeFuncionariosField.setText("");
        rgFuncionariosField.setText("");
        nascimentoFuncionarioField.setText("");
        rgFuncionariosField.setText("");
        cidadeFuncionarioField.setText("");
        paisFuncionarioField.setText("");
        cepFuncionarioField.setText("");
        bairrolFuncionarioField.setText("");
        cidadeFuncionarioField.setText("");
        ruaFuncionarioField.setText("");
        txtsenha.setText("");
        loginlFuncionarioField.setText("");
        comissaoFuncionariosField.setText("");
        demissaoFuncionariosField.setText("");
        admissaoFuncionariosField.setText("");
        salarioFuncionariosField.setText("");
        metaFuncionariosField.setText("");
        txtComplemento.setText("");
        txtNumero.setText("");
        IdadeLabel.setText("");
        txtcpf.setBorder(bordaOk.getBorder());
        emailFuncionarioField.setBorder(bordaOk.getBorder());
        nomeFuncionariosField.setBorder(bordaOk.getBorder());
        rgFuncionariosField.setBorder(bordaOk.getBorder());
        nascimentoFuncionarioField.setBorder(bordaOk.getBorder());
        rgFuncionariosField.setBorder(bordaOk.getBorder());
        cidadeFuncionarioField.setBorder(bordaOk.getBorder());
        paisFuncionarioField.setBorder(bordaOk.getBorder());
        cepFuncionarioField.setBorder(bordaOk.getBorder());
        bairrolFuncionarioField.setBorder(bordaOk.getBorder());
        cidadeFuncionarioField.setBorder(bordaOk.getBorder());
        ruaFuncionarioField.setBorder(bordaOk.getBorder());
        txtsenha.setBorder(bordaOk.getBorder());
        loginlFuncionarioField.setBorder(bordaOk.getBorder());
        comissaoFuncionariosField.setBorder(bordaOk.getBorder());
        demissaoFuncionariosField.setBorder(bordaOk.getBorder());
        admissaoFuncionariosField.setBorder(bordaOk.getBorder());
        salarioFuncionariosField.setBorder(bordaOk.getBorder());
        metaFuncionariosField.setBorder(bordaOk.getBorder());
        departamentoComboBox.setBorder(bordaOk.getBorder());
        departamentoComboBox.setSelectedIndex(0);
        tabPainel.setSelectedIndex(1);
        nomeFuncionariosField.requestFocus();
        CarregaImage("");

        btEditar.setText("Editar");
        nomeFuncionariosField.requestFocus();
        cont++;
    }

}//GEN-LAST:event_btEditarActionPerformed
    MecanicaCriptografaUtil senha = new MecanicaCriptografaUtil();
    private void metaFuncionariosFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metaFuncionariosFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_metaFuncionariosFieldActionPerformed

    private void cidadeFuncionarioFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidadeFuncionarioFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cidadeFuncionarioFieldActionPerformed

    private void demissaoFuncionariosFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_demissaoFuncionariosFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_demissaoFuncionariosFieldActionPerformed

    private void admissaoFuncionariosFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admissaoFuncionariosFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_admissaoFuncionariosFieldActionPerformed

private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
    if (nomeFuncionariosField.getText().length() > 50) {
        JOptionPane.showMessageDialog(null, "O nome Funcionário Deve ter até 50 caracteres");
        nomeFuncionariosField.requestFocus();
        nomeFuncionariosField.setBorder(bordaErro.getBorder());
    } else if (loginlFuncionarioField.getText().length() > 15) {
        JOptionPane.showMessageDialog(null, "O Login Deve ter até 15 caracteres");
        loginlFuncionarioField.requestFocus();
        loginlFuncionarioField.setBorder(bordaErro.getBorder());
    } else if (bairrolFuncionarioField.getText().length() > 50) {
        JOptionPane.showMessageDialog(null, "Bairro Deve ter até 50 caracteres");
        bairrolFuncionarioField.requestFocus();
        bairrolFuncionarioField.setBorder(bordaErro.getBorder());
    } else if (cidadeFuncionarioField.getText().length() > 50) {
        JOptionPane.showMessageDialog(null, "Cidade Deve ter até 50 caracteres");
        cidadeFuncionarioField.requestFocus();
        cidadeFuncionarioField.setBorder(bordaErro.getBorder());
    } else if (paisFuncionarioField.getText().length() > 30) {
        JOptionPane.showMessageDialog(null, "Cidade Deve ter até 30 caracteres");
        paisFuncionarioField.requestFocus();
        paisFuncionarioField.setBorder(bordaErro.getBorder());
    } else if (emailFuncionarioField.getText().length() > 45) {
        JOptionPane.showMessageDialog(null, "Email Deve ter até 45 caracteres");
        emailFuncionarioField.requestFocus();
        emailFuncionarioField.setBorder(bordaErro.getBorder());
    } else if (txtNumero.getText().length() > 10) {
        JOptionPane.showMessageDialog(null, "Numero Deve ter até 10 caracteres");
        txtNumero.requestFocus();
        txtNumero.setBorder(bordaErro.getBorder());
    } else if (ruaFuncionarioField.getText().length() > 50) {
        JOptionPane.showMessageDialog(null, "Logradouro Deve ter até 50 caracteres");
        ruaFuncionarioField.requestFocus();
        ruaFuncionarioField.setBorder(bordaErro.getBorder());
    }else if (txtComplemento.getText().length() > 50) {
        JOptionPane.showMessageDialog(null, "Numero Deve ter até 50 caracteres");
        txtComplemento.requestFocus();
        txtComplemento.setBorder(bordaErro.getBorder());
    }else if (ufFuncionarioField.getSelectedIndex()==0){
       JOptionPane.showMessageDialog(null, "Você esqueceu de Informar o UF!");
       ufFuncionarioField.requestFocus();
    }else if (rgFuncionariosField.getText().length() > 11) {
        JOptionPane.showMessageDialog(null, "RG Deve ter até 11 caracteres");
        rgFuncionariosField.requestFocus();
        rgFuncionariosField.setBorder(bordaErro.getBorder());
    }
    else if (cont % 2 == 0) {
        String nome = nomeFuncionariosField.getText();
        String cpf = txtcpf.getText();
        String rg = rgFuncionariosField.getText();
        double salario = 0;
        double comisso = 0;
        double meta = 0;
        try {
            salario = Double.valueOf(salarioFuncionariosField.getText());
            comisso = Double.valueOf(comissaoFuncionariosField.getText());
            meta = Double.valueOf(metaFuncionariosField.getText());
        } catch (NumberFormatException ne) {
            tabPainel.setSelectedIndex(1);
            comissaoFuncionariosField.requestFocus();
            comissaoFuncionariosField.setBorder(bordaErro.getBorder());
            salarioFuncionariosField.requestFocus();
            salarioFuncionariosField.setBorder(bordaErro.getBorder());
            metaFuncionariosField.requestFocus();
            metaFuncionariosField.setBorder(bordaErro.getBorder());
            JOptionPane.showMessageDialog(null, "Informe um valor numérico nesses campos");
        }
        String admissao = (admissaoFuncionariosField.getText());
        if (demissaoFuncionariosField.getText().equals("")){}
        String demissao = (demissaoFuncionariosField.getText());
        String login = loginlFuncionarioField.getText();
        String senhaFunc = txtsenha.getText();
        String logradouro = loginlFuncionarioField.getText();
        String bairro = bairrolFuncionarioField.getText();
        String cidade = cidadeFuncionarioField.getText();
        System.out.println(cepFuncionarioField.getText());
        String uf = (String) ufFuncionarioField.getSelectedItem();
        String cep = cepFuncionarioField.getText();
        String pais = paisFuncionarioField.getText();
        String nascimento = (nascimentoFuncionarioField.getText());
        String email = emailFuncionarioField.getText();
        int CodDepartamento = 0;
        try {
            CodDepartamento = ListaDepartamento.get(departamentoComboBox.getSelectedIndex() - 1).getCodDepartamento();
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Campo de Preenchimento Obrigatório!\nSelecione um Departamento.");
        }
        Departamento departamento = departamentoDAO.consultarDepartamento(CodDepartamento);
        String numero = txtNumero.getText();
        String complemento = txtComplemento.getText();
        String foto = fotoPathLabel.getText();


        Funcionario funcionario = new Funcionario(nome, cpf, rg, salario, comisso, meta, admissao, demissao, login, senhaFunc, nascimento, email, departamento, logradouro, complemento, bairro, cep, cidade, uf, numero, pais, foto);
        int idFuncionario = funcionarioDAO.inserirFuncionarios(funcionario);
        ListaEditaFuncionario.add(funcionario);
        table.setModel(tabelaModel(ListaEditaFuncionario));
        int row = table.getRowCount() - 1;
        if (table.getRowCount() >= 1) {
            table.setRowSelectionInterval(row, row);
        }
        table.scrollRectToVisible(table.getCellRect(row, 0, true));

        txtcpf.setText("");
        ufFuncionarioField.setSelectedIndex(0);
        emailFuncionarioField.setText("");
        nomeFuncionariosField.setText("");
        rgFuncionariosField.setText("");
        nascimentoFuncionarioField.setText("");
        rgFuncionariosField.setText("");
        cidadeFuncionarioField.setText("");
        paisFuncionarioField.setText("");
        cepFuncionarioField.setText("");
        bairrolFuncionarioField.setText("");
        cidadeFuncionarioField.setText("");
        ruaFuncionarioField.setText("");
        txtsenha.setText("");
        loginlFuncionarioField.setText("");
        comissaoFuncionariosField.setText("");
        demissaoFuncionariosField.setText("");
        admissaoFuncionariosField.setText("");
        salarioFuncionariosField.setText("");
        metaFuncionariosField.setText("");
        departamentoComboBox.setSelectedIndex(0);
        txtcpf.setBorder(bordaOk.getBorder());
        emailFuncionarioField.setBorder(bordaOk.getBorder());
        nomeFuncionariosField.setBorder(bordaOk.getBorder());
        rgFuncionariosField.setBorder(bordaOk.getBorder());
        nascimentoFuncionarioField.setBorder(bordaOk.getBorder());
        rgFuncionariosField.setBorder(bordaOk.getBorder());
        cidadeFuncionarioField.setBorder(bordaOk.getBorder());
        paisFuncionarioField.setBorder(bordaOk.getBorder());
        cepFuncionarioField.setBorder(bordaOk.getBorder());
        bairrolFuncionarioField.setBorder(bordaOk.getBorder());
        cidadeFuncionarioField.setBorder(bordaOk.getBorder());
        ruaFuncionarioField.setBorder(bordaOk.getBorder());
        txtsenha.setBorder(bordaOk.getBorder());
        loginlFuncionarioField.setBorder(bordaOk.getBorder());
        comissaoFuncionariosField.setBorder(bordaOk.getBorder());
        demissaoFuncionariosField.setBorder(bordaOk.getBorder());
        admissaoFuncionariosField.setBorder(bordaOk.getBorder());
        salarioFuncionariosField.setBorder(bordaOk.getBorder());
        metaFuncionariosField.setBorder(bordaOk.getBorder());
        departamentoComboBox.setBorder(bordaOk.getBorder());
        IdadeLabel.setText("");
        cont++;

    } else if (cont % 2 == 1) {
        System.out.println(cont);
        String nome = nomeFuncionariosField.getText();
        String cpf = txtcpf.getText();
        String rg = rgFuncionariosField.getText();
        Double salario = Double.valueOf(salarioFuncionariosField.getText());
        Double comissao = Double.valueOf(comissaoFuncionariosField.getText());
        Double meta = Double.valueOf(metaFuncionariosField.getText());
        String admissao = admissaoFuncionariosField.getText();
        String demissao = demissaoFuncionariosField.getText();
        String login = loginlFuncionarioField.getText();
        String senhaFunc = txtsenha.getText();
        String logradouro = ruaFuncionarioField.getText();
        String bairro = bairrolFuncionarioField.getText();
        String cidade = cidadeFuncionarioField.getText();
        String uf = (String) ufFuncionarioField.getSelectedItem();
        String cep = cepFuncionarioField.getText();
        String pais = paisFuncionarioField.getText();
        String nascimento = nascimentoFuncionarioField.getText();
        String email = emailFuncionarioField.getText();
        int idDepartamento = ListaDepartamento.get(departamentoComboBox.getSelectedIndex() - 1).getCodDepartamento();
        Departamento departamento = departamentoDAO.consultarDepartamento(idDepartamento);
        String num = txtNumero.getText();
        String complemento = txtComplemento.getText();
        String foto = fotoPathLabel.getText();

        Funcionario AlterFuncionario = ListaEditaFuncionario.get(table.getSelectedRow());

        AlterFuncionario.setNome(nome);
        AlterFuncionario.setCpf(cpf);
        AlterFuncionario.setRg(rg);
        AlterFuncionario.setSalario(salario);
        AlterFuncionario.setComissao(comissao);
        AlterFuncionario.setMeta(meta);
        AlterFuncionario.setAdmissao(admissao);
        AlterFuncionario.setDemissao(demissao);
        AlterFuncionario.setLogin(login);
        AlterFuncionario.setSenha(senhaFunc);
        AlterFuncionario.setLogradouro(logradouro);
        AlterFuncionario.setBairro(bairro);
        AlterFuncionario.setCidade(cidade);
        AlterFuncionario.setUf(uf);
        AlterFuncionario.setCep(cep);
        AlterFuncionario.setPais(pais);
        AlterFuncionario.setNascimento(nascimento);
        AlterFuncionario.setEmail(email);
        AlterFuncionario.setDepartamento(departamento);
        AlterFuncionario.setNumero(num);
        AlterFuncionario.setComplemento(complemento);
        AlterFuncionario.setFoto(foto);
        funcionarioDAO.alterarFuncionario(AlterFuncionario, AlterFuncionario.getCod());

        table.setModel(tabelaModel(ListaEditaFuncionario));

        txtcpf.setText("");
        ufFuncionarioField.setSelectedIndex(0);
        emailFuncionarioField.setText("");
        nomeFuncionariosField.setText("");
        rgFuncionariosField.setText("");
        nascimentoFuncionarioField.setText("");
        rgFuncionariosField.setText("");
        cidadeFuncionarioField.setText("");
        paisFuncionarioField.setText("");
        cepFuncionarioField.setText("");
        bairrolFuncionarioField.setText("");
        cidadeFuncionarioField.setText("");
        ruaFuncionarioField.setText("");
        txtsenha.setText("");
        loginlFuncionarioField.setText("");
        comissaoFuncionariosField.setText("");
        demissaoFuncionariosField.setText("");
        admissaoFuncionariosField.setText("");
        salarioFuncionariosField.setText("");
        metaFuncionariosField.setText("");
        txtComplemento.setText("");
        txtNumero.setText("");
        IdadeLabel.setText("");
        txtcpf.setBorder(bordaOk.getBorder());
        emailFuncionarioField.setBorder(bordaOk.getBorder());
        nomeFuncionariosField.setBorder(bordaOk.getBorder());
        rgFuncionariosField.setBorder(bordaOk.getBorder());
        nascimentoFuncionarioField.setBorder(bordaOk.getBorder());
        rgFuncionariosField.setBorder(bordaOk.getBorder());
        cidadeFuncionarioField.setBorder(bordaOk.getBorder());
        paisFuncionarioField.setBorder(bordaOk.getBorder());
        cepFuncionarioField.setBorder(bordaOk.getBorder());
        bairrolFuncionarioField.setBorder(bordaOk.getBorder());
        cidadeFuncionarioField.setBorder(bordaOk.getBorder());
        ruaFuncionarioField.setBorder(bordaOk.getBorder());
        txtsenha.setBorder(bordaOk.getBorder());
        loginlFuncionarioField.setBorder(bordaOk.getBorder());
        comissaoFuncionariosField.setBorder(bordaOk.getBorder());
        demissaoFuncionariosField.setBorder(bordaOk.getBorder());
        admissaoFuncionariosField.setBorder(bordaOk.getBorder());
        salarioFuncionariosField.setBorder(bordaOk.getBorder());
        metaFuncionariosField.setBorder(bordaOk.getBorder());
        departamentoComboBox.setBorder(bordaOk.getBorder());
        departamentoComboBox.setSelectedIndex(0);
        tabPainel.setSelectedIndex(0);
        cont++;
        System.out.println(cont);
        btEditar.setText("Editar");

    } 
}//GEN-LAST:event_btSalvarActionPerformed

private void ruaFuncionarioFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ruaFuncionarioFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_ruaFuncionarioFieldActionPerformed
    public void CarregaImage(String path) {
        Image Img = Toolkit.getDefaultToolkit().getImage(path);
        fotoLabel.setIcon(new ImageIcon(Img.getScaledInstance(200, 250, WIDTH)));
        fotoPathLabel.setText(path);
    }
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    JFileChooser Escolha = new JFileChooser("//fotos");
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Imagens JPG & PNG", "jpg", "png");  //Cria um filtro de imagens
    Escolha.setFileFilter(filter); //seta o filtro
    int returnVal = Escolha.showOpenDialog(null);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        DataInputStream is = null;
        try {
            CarregaImage(Escolha.getSelectedFile().getPath());
        } catch (RollbackException rex) {
            rex.printStackTrace();
        }
        this.requestFocus();

    }
}//GEN-LAST:event_jButton1ActionPerformed

private void txtcpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcpfActionPerformed
}//GEN-LAST:event_txtcpfActionPerformed

private void nascimentoFuncionarioFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nascimentoFuncionarioFieldFocusLost
    DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
    try {
        Date data1 = df.parse(nascimentoFuncionarioField.getText());
        Date data2 = new Date();

        Calendar cal1 = Calendar.getInstance();
        Calendar cal2 = Calendar.getInstance();
        cal1.setTime(data1);
        cal2.setTime(data2);
        int ano1 = cal1.get(Calendar.YEAR);
        int ano2 = cal2.get(Calendar.YEAR);
        int mes1 = cal1.get(Calendar.MONTH);
        int mes2 = cal2.get(Calendar.MONTH);
        int dia1 = cal1.get(Calendar.DAY_OF_MONTH);
        int dia2 = cal2.get(Calendar.DAY_OF_MONTH);
        int idade = ano2 - ano1;
        if ((mes2 < mes1)
                || ((mes2 == mes1) && (dia2 < dia1))) {
            idade -= 1;
        }
        IdadeLabel.setText(String.valueOf(idade));
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Informe uma Data Válida");
        nascimentoFuncionarioField.requestFocus();
        nascimentoFuncionarioField.setBorder(bordaErro.getBorder());
        System.out.println("Erro na conversão de data!");
        // e.printStackTrace();

    }
}//GEN-LAST:event_nascimentoFuncionarioFieldFocusLost

private void nascimentoFuncionarioFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nascimentoFuncionarioFieldKeyPressed
    String texto = nascimentoFuncionarioField.getText();
    if (texto.length() == 2) {
        texto = texto + "/";
        nascimentoFuncionarioField.setText(texto);
    }
    if (texto.length() == 5) {
        texto = texto + "/";
        nascimentoFuncionarioField.setText(texto);
    }


    if (evt.getKeyCode() == evt.VK_BACK_SPACE) {

        String BackFieldText = nascimentoFuncionarioField.getText();
        if (!BackFieldText.equals("")) {
            String SubStr = BackFieldText.substring(0, BackFieldText.length() - 1);
            nascimentoFuncionarioField.setText("" + SubStr);
        }
    }
}//GEN-LAST:event_nascimentoFuncionarioFieldKeyPressed

private void nascimentoFuncionarioFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nascimentoFuncionarioFieldKeyTyped
    if (nascimentoFuncionarioField.getText().length() >= 10) {
        nascimentoFuncionarioField.setText(nascimentoFuncionarioField.getText().substring(0, 9));
        Toolkit.getDefaultToolkit().beep();
    }
}//GEN-LAST:event_nascimentoFuncionarioFieldKeyTyped

private void admissaoFuncionariosFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_admissaoFuncionariosFieldKeyPressed
    String texto = admissaoFuncionariosField.getText();
    if (texto.length() == 2) {
        texto = texto + "/";
        admissaoFuncionariosField.setText(texto);
    }
    if (texto.length() == 5) {
        texto = texto + "/";
        admissaoFuncionariosField.setText(texto);
    }


    if (evt.getKeyCode() == evt.VK_BACK_SPACE) {

        String BackFieldText = admissaoFuncionariosField.getText();
        if (!BackFieldText.equals("")) {
            String SubStr = BackFieldText.substring(0, BackFieldText.length() - 1);
            admissaoFuncionariosField.setText("" + SubStr);
        }
    }
}//GEN-LAST:event_admissaoFuncionariosFieldKeyPressed

private void admissaoFuncionariosFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_admissaoFuncionariosFieldKeyTyped
    if (admissaoFuncionariosField.getText().length() >= 10) {
        admissaoFuncionariosField.setText(admissaoFuncionariosField.getText().substring(0, 9));
        Toolkit.getDefaultToolkit().beep();
    }
}//GEN-LAST:event_admissaoFuncionariosFieldKeyTyped

private void demissaoFuncionariosFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_demissaoFuncionariosFieldKeyPressed
    String texto = demissaoFuncionariosField.getText();
    if (texto.length() == 2) {
        texto = texto + "/";
        demissaoFuncionariosField.setText(texto);
    }
    if (texto.length() == 5) {
        texto = texto + "/";
        demissaoFuncionariosField.setText(texto);
    }


    if (evt.getKeyCode() == evt.VK_BACK_SPACE) {

        String BackFieldText = demissaoFuncionariosField.getText();
        if (!BackFieldText.equals("")) {
            String SubStr = BackFieldText.substring(0, BackFieldText.length() - 1);
            demissaoFuncionariosField.setText("" + SubStr);
        }
    }
}//GEN-LAST:event_demissaoFuncionariosFieldKeyPressed

private void demissaoFuncionariosFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_demissaoFuncionariosFieldKeyTyped
    if (demissaoFuncionariosField.getText().length() >= 10) {
        demissaoFuncionariosField.setText(demissaoFuncionariosField.getText().substring(0, 9));
        Toolkit.getDefaultToolkit().beep();
    }
}//GEN-LAST:event_demissaoFuncionariosFieldKeyTyped

private void salarioFuncionariosFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salarioFuncionariosFieldKeyTyped
}//GEN-LAST:event_salarioFuncionariosFieldKeyTyped

private void salarioFuncionariosFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salarioFuncionariosFieldKeyPressed
}//GEN-LAST:event_salarioFuncionariosFieldKeyPressed

private void salarioFuncionariosFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_salarioFuncionariosFieldFocusLost
    Double valor = Double.valueOf(salarioFuncionariosField.getText());
    salarioFuncionariosField.setText(casasDecimais.converterDoubleString(valor));
}//GEN-LAST:event_salarioFuncionariosFieldFocusLost

private void metaFuncionariosFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_metaFuncionariosFieldFocusLost
    try {
        Double valor = Double.valueOf(metaFuncionariosField.getText());
        metaFuncionariosField.setText(casasDecimais.converterDoubleString(valor));
    } catch (NumberFormatException numberFormatException) {
    }
}//GEN-LAST:event_metaFuncionariosFieldFocusLost

private void rgFuncionariosFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rgFuncionariosFieldFocusGained
    rgFuncionariosField.addKeyListener(
            new KeyListener() {

                public void keyTyped(KeyEvent e) {
                    rgFuncionariosField.setText(objLimitador.maxLength19(rgFuncionariosField.getText(), 10));
                }

                public void keyPressed(KeyEvent e) {
                    rgFuncionariosField.setText(objLimitador.maxLength19(rgFuncionariosField.getText(), 10));
                }

                public void keyReleased(KeyEvent e) {
                    rgFuncionariosField.setText(objLimitador.maxLength19(rgFuncionariosField.getText(), 10));
                }
                

            });

}//GEN-LAST:event_rgFuncionariosFieldFocusGained

private void comissaoFuncionariosFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comissaoFuncionariosFieldFocusLost
    if (comissaoFuncionariosField.getText().equals("")) {
        JOptionPane.showMessageDialog(null, "Esse Funcionário não terá comissão!");
        admissaoFuncionariosField.requestFocus();
    }
}//GEN-LAST:event_comissaoFuncionariosFieldFocusLost

private void txtNumeroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroFocusGained
    rgFuncionariosField.addKeyListener(
            new KeyListener() {

                public void keyTyped(KeyEvent e) {
                    rgFuncionariosField.setText(objLimitador.maxLength19(rgFuncionariosField.getText(), 5));
                }

                public void keyPressed(KeyEvent e) {
                    rgFuncionariosField.setText(objLimitador.maxLength19(rgFuncionariosField.getText(), 5));
                }

                public void keyReleased(KeyEvent e) {
                    rgFuncionariosField.setText(objLimitador.maxLength19(rgFuncionariosField.getText(), 5));
                }
            });
}//GEN-LAST:event_txtNumeroFocusGained

private void departamentoComboBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_departamentoComboBoxFocusLost
}//GEN-LAST:event_departamentoComboBoxFocusLost

private void nomeFuncionariosFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomeFuncionariosFieldFocusLost
}//GEN-LAST:event_nomeFuncionariosFieldFocusLost

private void txtsenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtsenhaFocusLost
        try {
            txtsenha.setText(criptaSenha.criptografaSenha(txtsenha.getText()));
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(FuncionarioView.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_txtsenhaFocusLost

    private void nomeFuncionariosFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomeFuncionariosFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(nomeFuncionariosField.getToolTipText());

    }//GEN-LAST:event_nomeFuncionariosFieldFocusGained

    private void toolTipFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_toolTipFocusGained
 
    }//GEN-LAST:event_toolTipFocusGained

    private void txtcpfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcpfFocusGained
        // TODO add your handling code here:
        toolTip.setText(txtcpf.getToolTipText());

    }//GEN-LAST:event_txtcpfFocusGained

    private void nascimentoFuncionarioFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nascimentoFuncionarioFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(nascimentoFuncionarioField.getToolTipText());

    }//GEN-LAST:event_nascimentoFuncionarioFieldFocusGained

    private void ruaFuncionarioFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ruaFuncionarioFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(ruaFuncionarioField.getToolTipText());

    }//GEN-LAST:event_ruaFuncionarioFieldFocusGained

    private void txtComplementoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComplementoFocusGained
        // TODO add your handling code here:
        toolTip.setText(txtComplemento.getToolTipText());

    }//GEN-LAST:event_txtComplementoFocusGained

    private void bairrolFuncionarioFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bairrolFuncionarioFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(bairrolFuncionarioField.getToolTipText());

    }//GEN-LAST:event_bairrolFuncionarioFieldFocusGained

    private void cidadeFuncionarioFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cidadeFuncionarioFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(cidadeFuncionarioField.getToolTipText());

    }//GEN-LAST:event_cidadeFuncionarioFieldFocusGained

    private void ufFuncionarioFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ufFuncionarioFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(ufFuncionarioField.getToolTipText());

    }//GEN-LAST:event_ufFuncionarioFieldFocusGained

    private void paisFuncionarioFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_paisFuncionarioFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(paisFuncionarioField.getToolTipText());

    }//GEN-LAST:event_paisFuncionarioFieldFocusGained

    private void cepFuncionarioFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cepFuncionarioFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(cepFuncionarioField.getToolTipText());

    }//GEN-LAST:event_cepFuncionarioFieldFocusGained

    private void loginlFuncionarioFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_loginlFuncionarioFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(loginlFuncionarioField.getToolTipText());

    }//GEN-LAST:event_loginlFuncionarioFieldFocusGained

    private void txtsenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtsenhaFocusGained
        // TODO add your handling code here:
        toolTip.setText(txtsenha.getToolTipText());

    }//GEN-LAST:event_txtsenhaFocusGained

    private void emailFuncionarioFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFuncionarioFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(emailFuncionarioField.getToolTipText());

    }//GEN-LAST:event_emailFuncionarioFieldFocusGained

    private void departamentoComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_departamentoComboBoxFocusGained
        // TODO add your handling code here:
        toolTip.setText(departamentoComboBox.getToolTipText());

    }//GEN-LAST:event_departamentoComboBoxFocusGained

    private void salarioFuncionariosFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_salarioFuncionariosFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(salarioFuncionariosField.getToolTipText());

    }//GEN-LAST:event_salarioFuncionariosFieldFocusGained

    private void metaFuncionariosFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_metaFuncionariosFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(metaFuncionariosField.getToolTipText());

    }//GEN-LAST:event_metaFuncionariosFieldFocusGained

    private void comissaoFuncionariosFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comissaoFuncionariosFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(comissaoFuncionariosField.getToolTipText());

    }//GEN-LAST:event_comissaoFuncionariosFieldFocusGained

    private void admissaoFuncionariosFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_admissaoFuncionariosFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(admissaoFuncionariosField.getToolTipText());

    }//GEN-LAST:event_admissaoFuncionariosFieldFocusGained

    private void demissaoFuncionariosFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_demissaoFuncionariosFieldFocusGained
        // TODO add your handling code here:
        toolTip.setText(demissaoFuncionariosField.getToolTipText());

    }//GEN-LAST:event_demissaoFuncionariosFieldFocusGained

    private void btEditarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btEditarFocusGained
        // TODO add your handling code here:
        toolTip.setText(btEditar.getToolTipText());

    }//GEN-LAST:event_btEditarFocusGained

    private void btInserirFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btInserirFocusGained
        // TODO add your handling code here:
        toolTip.setText(btInserir.getToolTipText());

    }//GEN-LAST:event_btInserirFocusGained

    private void btExcluirFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btExcluirFocusGained
        // TODO add your handling code here:
        toolTip.setText(btExcluir.getToolTipText());

    }//GEN-LAST:event_btExcluirFocusGained

    private void btCancelarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btCancelarFocusGained
        // TODO add your handling code here:
        toolTip.setText(btCancelar.getToolTipText());

    }//GEN-LAST:event_btCancelarFocusGained

    private void btSalvarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btSalvarFocusGained
        // TODO add your handling code here:
        toolTip.setText(btSalvar.getToolTipText());

    }//GEN-LAST:event_btSalvarFocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IdadeLabel;
    private javax.swing.JTextField admissaoFuncionariosField;
    private javax.swing.JLabel admissaoFuncionariosLabel;
    private javax.swing.JLabel bairroFuncionarioLabel;
    private javax.swing.JTextField bairrolFuncionarioField;
    private javax.swing.JTextField bordaErro;
    private javax.swing.JTextField bordaOk;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btInserir;
    private javax.swing.JButton btSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JFormattedTextField cepFuncionarioField;
    private javax.swing.JLabel cepFuncionarioLabel;
    private javax.swing.JTextField cidadeFuncionarioField;
    private javax.swing.JLabel cidadeFuncionarioLabel;
    private javax.swing.JTextField comissaoFuncionariosField;
    private javax.swing.JLabel comissaoFuncionariosLabel;
    private javax.swing.JLabel cpfFuncionariosLabel;
    private javax.swing.JTextField demissaoFuncionariosField;
    private javax.swing.JLabel demissaoFuncionariosLabel;
    private javax.swing.JComboBox departamentoComboBox;
    private javax.swing.JTextField emailFuncionarioField;
    private javax.swing.JLabel emailFuncionarioLabel;
    private javax.swing.JLabel fotoLabel;
    private javax.swing.JLabel fotoPathLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel loginFuncionariosLabel;
    private javax.swing.JTextField loginlFuncionarioField;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTextField metaFuncionariosField;
    private javax.swing.JLabel metaFuncionariosLabel;
    private javax.swing.JFormattedTextField nascimentoFuncionarioField;
    private javax.swing.JLabel nascimentoFuncionarioLabel;
    private javax.swing.JTextField nomeFuncionariosField;
    private javax.swing.JLabel nomeFuncionariosLabel;
    private javax.swing.JTextField paisFuncionarioField;
    private javax.swing.JLabel paisFuncionarioLabel;
    private javax.swing.JFormattedTextField rgFuncionariosField;
    private javax.swing.JLabel rgFuncionariosLabel;
    private javax.swing.JTextField ruaFuncionarioField;
    private javax.swing.JLabel ruaFuncionarioLabel;
    private javax.swing.JTextField salarioFuncionariosField;
    private javax.swing.JLabel salarioFuncionariosLabel;
    private javax.swing.JLabel senhaFuncionariosLabel;
    private javax.swing.JTabbedPane tabPainel;
    private javax.swing.JTable table;
    private javax.swing.JLabel toolTip;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JFormattedTextField txtcpf;
    private javax.swing.JPasswordField txtsenha;
    private javax.swing.JComboBox ufFuncionarioField;
    private javax.swing.JLabel ufFuncionarioLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public static void main(final String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                
//
//}
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FuncionarioView.class  
////.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } 
////catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FuncionarioView.class  
////.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } 
////catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FuncionarioView.class  
////.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } 
////catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FuncionarioView.class  
////.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {

            public void run() {
                frame = new JFrame();
                frame.setContentPane(new FuncionarioView());
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
//                frame.setTitle(args[0]);

            }
        });
    }

    public TableModel tabelaModel(List<Funcionario> listaFuncionario) {
        int n = 0;
        JTable table1;

        listaFuncionario = funcionarioDAO.listarTodosFuncionarios();
        Object[][] data = new Object[listaFuncionario.size()][22];
        String[] columnNames = {"Cod.funcionario", "Nome", "CPF", "RG", "Salário", "Comissão", "Meta", "Admissão", "Demissão", "Login", "Senha", "Logradouro", "Bairro", "Cidade", "UF", "CEP", "Pais", "Nascimento", "Email", "Departamento", "Numero", "Complemento"};

        for (Funcionario funcionarios : listaFuncionario) {
            data[n][0] = funcionarios.getCod();
            data[n][1] = funcionarios.getNome();
            data[n][2] = funcionarios.getCpf();
            data[n][3] = funcionarios.getRg();
            data[n][4] = funcionarios.getSalario();
            data[n][5] = funcionarios.getComissao();
            data[n][6] = funcionarios.getMeta();
            data[n][7] = funcionarios.getAdmissao();
            data[n][8] = funcionarios.getDemissao();
            data[n][9] = funcionarios.getLogin();
            data[n][10] = funcionarios.getSenha();
            data[n][11] = funcionarios.getLogradouro();
            data[n][12] = funcionarios.getBairro();
            data[n][13] = funcionarios.getCidade();
            data[n][14] = funcionarios.getUf();
            data[n][15] = funcionarios.getCep();
            data[n][16] = funcionarios.getPais();
            data[n][17] = funcionarios.getNascimento();
            data[n][18] = funcionarios.getEmail();
            data[n][19] = funcionarios.getDepartamento().getCodDepartamento();
            data[n][20] = funcionarios.getNumero();
            data[n][21] = funcionarios.getComplemento();

            n++;
        }

        table1 = new JTable(data, columnNames) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        table1.setPreferredScrollableViewportSize(new Dimension(500, 300));
        table1.setFillsViewportHeight(true);
        table1.getColumnModel().getColumn(0).setPreferredWidth(100);
        table1.getColumnModel().getColumn(1).setPreferredWidth(300);
        table1.getColumnModel().getColumn(2).setPreferredWidth(300);
        javax.swing.table.TableModel model = table1.getModel();



        table.addMouseListener(new MouseAdapter() {

            public void mouseClicked(MouseEvent e) {
                mostraFoto();
                if (cont % 2 == 1) {
                    editarLinha();
                }
            }
        });
        return model;
    }

    public boolean isCellEditable(int row, int col) {
        return false;
    }

    public void mostraFoto() {

        String path = ListaEditaFuncionario.get(table.getSelectedRow()).getFoto();

        if (path == null) {
            fotoLabel.setText("//192.168.0.10//Fotos//sem_imagem.jpg");
        } else {
            CarregaImage(path);
        }
    }

    public void editarLinha() {
        //      int index = table.getSelectedRow();

        txtcpf.setText(String.valueOf(table.getValueAt(table.getSelectedRow(), 2)));
        nomeFuncionariosField.setText(String.valueOf(table.getValueAt(table.getSelectedRow(), 1)));
        rgFuncionariosField.setText(String.valueOf(table.getValueAt(table.getSelectedRow(), 3)));
        nascimentoFuncionarioField.setText(String.valueOf(table.getValueAt(table.getSelectedRow(), 17)));
        emailFuncionarioField.setText(String.valueOf(table.getValueAt(table.getSelectedRow(), 18)));
        ufFuncionarioField.setSelectedItem(String.valueOf(table.getValueAt(table.getSelectedRow(), 14)));
        cidadeFuncionarioField.setText((String) table.getValueAt(table.getSelectedRow(), 13));
        paisFuncionarioField.setText((String) table.getValueAt(table.getSelectedRow(), 16));
        cepFuncionarioField.setText((String) table.getValueAt(table.getSelectedRow(), 15));
        ruaFuncionarioField.setText((String) table.getValueAt(table.getSelectedRow(), 11));
        loginlFuncionarioField.setText((String) table.getValueAt(table.getSelectedRow(), 9));
        txtsenha.setText((String) table.getValueAt(table.getSelectedRow(), 10));
        comissaoFuncionariosField.setText(String.valueOf(table.getValueAt(table.getSelectedRow(), 5)));
        demissaoFuncionariosField.setText((String) table.getValueAt(table.getSelectedRow(), 8));
        admissaoFuncionariosField.setText((String) table.getValueAt(table.getSelectedRow(), 7));
        salarioFuncionariosField.setText(String.valueOf(table.getValueAt(table.getSelectedRow(), 4)));
        metaFuncionariosField.setText(String.valueOf(table.getValueAt(table.getSelectedRow(), 6)));

        int codepartamento = (Integer) table.getValueAt(table.getSelectedRow(), 19);
        Departamento departamento = departamentoDAO.consultarDepartamento(codepartamento);
        departamentoComboBox.setSelectedItem(departamento.getCodDepartamento() + " | " + departamento.getNome());

        txtNumero.setText(String.valueOf(table.getValueAt(table.getSelectedRow(), 20)));
        txtComplemento.setText(String.valueOf(table.getValueAt(table.getSelectedRow(), 21)));
        bairrolFuncionarioField.setText(String.valueOf(table.getValueAt(table.getSelectedRow(), 12)));
    }
}
